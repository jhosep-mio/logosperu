/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./node_modules/viewerjs/dist/viewer.css":
/*!***********************************************!*\
  !*** ./node_modules/viewerjs/dist/viewer.css ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"684121f25285\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy92aWV3ZXJqcy9kaXN0L3ZpZXdlci5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy92aWV3ZXJqcy9kaXN0L3ZpZXdlci5jc3M/YzhmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjY4NDEyMWYyNTI4NVwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/viewerjs/dist/viewer.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/globals.scss":
/*!******************************!*\
  !*** ./src/app/globals.scss ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"6d6529132e91\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5zY3NzIiwibWFwcGluZ3MiOiI7QUFBQSwrREFBZSxjQUFjO0FBQzdCLElBQUksSUFBVSxJQUFJLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBwL2dsb2JhbHMuc2Nzcz9iZTYyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiNmQ2NTI5MTMyZTkxXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.scss\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/estructura/HeardModal.tsx":
/*!**************************************************!*\
  !*** ./src/components/estructura/HeardModal.tsx ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HeardModal: function() { return /* binding */ HeardModal; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_IoCloseCircle_IoHeartSharp_react_icons_io5__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=IoCloseCircle,IoHeartSharp!=!react-icons/io5 */ \"(app-pages-browser)/./node_modules/react-icons/io5/index.esm.js\");\n/* harmony import */ var react_transition_group__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-transition-group */ \"(app-pages-browser)/./node_modules/react-transition-group/esm/CSSTransition.js\");\n/* harmony import */ var _shared_hooks_useAuth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/hooks/useAuth */ \"(app-pages-browser)/./src/components/shared/hooks/useAuth.ts\");\n/* harmony import */ var _shared_Helper_global__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared/Helper/global */ \"(app-pages-browser)/./src/components/shared/Helper/global.ts\");\n/* harmony import */ var _shared_functions_capitalizer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../shared/functions/capitalizer */ \"(app-pages-browser)/./src/components/shared/functions/capitalizer.ts\");\n/* harmony import */ var _heard_Visualizar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./heard/Visualizar */ \"(app-pages-browser)/./src/components/estructura/heard/Visualizar.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nconst HeardModal = (param)=>{\n    let { open } = param;\n    _s();\n    const { heard } = (0,_shared_hooks_useAuth__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_transition_group__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n            in: open,\n            timeout: 300,\n            classNames: \"heard\",\n            unmountOnExit: true,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                className: \"absolute w-[400px] h-[400px] top-full right-[80px] overflow-hidden rounded-b-3xl\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-[#1F1D2B] w-full lg:right-0 h-full transition-all z-50 \",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative pt-16 lg:pt-8 text-gray-300 p-8 h-full\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_IoCloseCircle_IoHeartSharp_react_icons_io5__WEBPACK_IMPORTED_MODULE_7__.IoCloseCircle, {\n                                className: \"lg:hidden absolute left-4 top-4 p-3 box-content text-gray-300 bg-[#262837] rounded-full text-xl\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                lineNumber: 26,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                className: \"text-4xl my-4 gap-3 w-full text-center flex justify-center items-center\",\n                                children: [\n                                    \"Mis favoritos \",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_IoCloseCircle_IoHeartSharp_react_icons_io5__WEBPACK_IMPORTED_MODULE_7__.IoHeartSharp, {\n                                        className: \"text-primary\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                        lineNumber: 28,\n                                        columnNumber: 31\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                lineNumber: 27,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mt-12\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"h-[400px] md:h-[700px] lg:h-[290px] overflow-y-scroll\",\n                                    children: heard.length > 0 ? heard.map((car)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"bg-[#262837] p-4 rounded-xl mb-4\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"grid grid-cols-6\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"col-span-5 flex items-center gap-5\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                                alt: \"\",\n                                                                src: \"\".concat(_shared_Helper_global__WEBPACK_IMPORTED_MODULE_3__.Global.urlImages, \"/itemsportafolios/\").concat(car.imagen1),\n                                                                className: \"w-10 h-10 object-cover\"\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                                                lineNumber: 43,\n                                                                columnNumber: 33\n                                                            }, undefined),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                children: [\n                                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h5\", {\n                                                                        className: \"text-2xl line-clamp-2 overflow-hidden\",\n                                                                        children: car.titulo\n                                                                    }, void 0, false, {\n                                                                        fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                                                        lineNumber: 49,\n                                                                        columnNumber: 35\n                                                                    }, undefined),\n                                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                                        className: \"text-lg text-gray-500\",\n                                                                        children: (0,_shared_functions_capitalizer__WEBPACK_IMPORTED_MODULE_4__.capitalizeFirstLetter)(car.categoria)\n                                                                    }, void 0, false, {\n                                                                        fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                                                        lineNumber: 52,\n                                                                        columnNumber: 35\n                                                                    }, undefined)\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                                                lineNumber: 48,\n                                                                columnNumber: 33\n                                                            }, undefined)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                                        lineNumber: 42,\n                                                        columnNumber: 31\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"flex justify-center items-center gap-3\",\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_heard_Visualizar__WEBPACK_IMPORTED_MODULE_5__.Visualizar, {\n                                                            producto: car\n                                                        }, void 0, false, {\n                                                            fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                                            lineNumber: 58,\n                                                            columnNumber: 33\n                                                        }, undefined)\n                                                    }, void 0, false, {\n                                                        fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                                        lineNumber: 57,\n                                                        columnNumber: 31\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                                lineNumber: 41,\n                                                columnNumber: 29\n                                            }, undefined)\n                                        }, car.id, false, {\n                                            fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                            lineNumber: 37,\n                                            columnNumber: 27\n                                        }, undefined)) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"w-full h-full flex items-center justify-center\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"w-full text-center text-3xl\",\n                                            children: [\n                                                \"Aun no tienes productos favoritos. \",\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                                    fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                                    lineNumber: 67,\n                                                    columnNumber: 103\n                                                }, undefined),\n                                                \" Comienza a llenarlo.\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                            lineNumber: 67,\n                                            columnNumber: 25\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                        lineNumber: 66,\n                                        columnNumber: 23\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                    lineNumber: 31,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                                lineNumber: 30,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                        lineNumber: 25,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                    lineNumber: 21,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n                lineNumber: 20,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\HeardModal.tsx\",\n            lineNumber: 19,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false);\n};\n_s(HeardModal, \"BAxhAhUjoCgxNXKMkwNV0ruoMvA=\", false, function() {\n    return [\n        _shared_hooks_useAuth__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n    ];\n});\n_c = HeardModal;\nvar _c;\n$RefreshReg$(_c, \"HeardModal\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2VzdHJ1Y3R1cmEvSGVhcmRNb2RhbC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQThCO0FBQytCO0FBQ1A7QUFDVDtBQUNHO0FBQ3VCO0FBQ3hCO0FBT3hDLE1BQU1RLGFBQWE7UUFBQyxFQUFFQyxJQUFJLEVBQXFCOztJQUNwRCxNQUFNLEVBQUVDLEtBQUssRUFBRSxHQUFHTixpRUFBT0E7SUFFekIscUJBQ0U7a0JBQ0UsNEVBQUNELDhEQUFhQTtZQUFDUSxJQUFJRjtZQUFNRyxTQUFTO1lBQUtDLFlBQVc7WUFBUUMsYUFBYTtzQkFDckUsNEVBQUNDO2dCQUFRQyxXQUFVOzBCQUNqQiw0RUFBQ0M7b0JBQ0NELFdBQVU7OEJBR1YsNEVBQUNDO3dCQUFJRCxXQUFVOzswQ0FDYiw4REFBQ2YsNEdBQWFBO2dDQUFDZSxXQUFVOzs7Ozs7MENBQ3pCLDhEQUFDRTtnQ0FBR0YsV0FBVTs7b0NBQTBFO2tEQUN4RSw4REFBQ2QsMkdBQVlBO3dDQUFDYyxXQUFVOzs7Ozs7Ozs7Ozs7MENBRXhDLDhEQUFDQztnQ0FBSUQsV0FBVTswQ0FDYiw0RUFBQ0M7b0NBQUlELFdBQVU7OENBR1pOLE1BQU1TLE1BQU0sR0FBRyxJQUVWVCxNQUFNVSxHQUFHLENBQUMsQ0FBQ0Msb0JBQ1QsOERBQUNKOzRDQUNDRCxXQUFVO3NEQUdWLDRFQUFDQztnREFBSUQsV0FBVTs7a0VBQ2IsOERBQUNDO3dEQUFJRCxXQUFVOzswRUFDYiw4REFBQ007Z0VBQ0NDLEtBQUk7Z0VBQ0pDLEtBQUssR0FBd0NILE9BQXJDaEIseURBQU1BLENBQUNvQixTQUFTLEVBQUMsc0JBQWdDLE9BQVpKLElBQUlLLE9BQU87Z0VBQ3hEVixXQUFVOzs7Ozs7MEVBRVosOERBQUNDOztrRkFDQyw4REFBQ1U7d0VBQUdYLFdBQVU7a0ZBQ1hLLElBQUlPLE1BQU07Ozs7OztrRkFFYiw4REFBQ0M7d0VBQUViLFdBQVU7a0ZBQ1ZWLG9GQUFxQkEsQ0FBQ2UsSUFBSVMsU0FBUzs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tFQUkxQyw4REFBQ2I7d0RBQUlELFdBQVU7a0VBQ2IsNEVBQUNULHlEQUFVQTs0REFBQ3dCLFVBQVVWOzs7Ozs7Ozs7Ozs7Ozs7OzsyQ0FuQnJCQSxJQUFJVyxFQUFFOzs7O3VFQTJCakIsOERBQUNmO3dDQUFJRCxXQUFVO2tEQUNiLDRFQUFDYTs0Q0FBRWIsV0FBVTs7Z0RBQThCOzhEQUFtQyw4REFBQ2lCOzs7OztnREFBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFXNUcsRUFBQztHQWhFWXpCOztRQUNPSiw2REFBT0E7OztLQURkSSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9lc3RydWN0dXJhL0hlYXJkTW9kYWwudHN4PzIzMGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7IElvQ2xvc2VDaXJjbGUsIElvSGVhcnRTaGFycCB9IGZyb20gJ3JlYWN0LWljb25zL2lvNSdcclxuaW1wb3J0IHsgQ1NTVHJhbnNpdGlvbiB9IGZyb20gJ3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAnXHJcbmltcG9ydCB1c2VBdXRoIGZyb20gJy4uL3NoYXJlZC9ob29rcy91c2VBdXRoJ1xyXG5pbXBvcnQgeyBHbG9iYWwgfSBmcm9tICcuLi9zaGFyZWQvSGVscGVyL2dsb2JhbCdcclxuaW1wb3J0IHsgY2FwaXRhbGl6ZUZpcnN0TGV0dGVyIH0gZnJvbSAnLi4vc2hhcmVkL2Z1bmN0aW9ucy9jYXBpdGFsaXplcidcclxuaW1wb3J0IHsgVmlzdWFsaXphciB9IGZyb20gJy4vaGVhcmQvVmlzdWFsaXphcidcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgU2ltcGxlRGlhbG9nUHJvcHMge1xyXG4gIG9wZW46IGJvb2xlYW5cclxuICBzZXRPcGVuOiBSZWFjdC5EaXNwYXRjaDxSZWFjdC5TZXRTdGF0ZUFjdGlvbjxib29sZWFuPj5cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEhlYXJkTW9kYWwgPSAoeyBvcGVuIH06IFNpbXBsZURpYWxvZ1Byb3BzKSA9PiB7XHJcbiAgY29uc3QgeyBoZWFyZCB9ID0gdXNlQXV0aCgpXHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q1NTVHJhbnNpdGlvbiBpbj17b3Blbn0gdGltZW91dD17MzAwfSBjbGFzc05hbWVzPSdoZWFyZCcgdW5tb3VudE9uRXhpdD5cclxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9J2Fic29sdXRlIHctWzQwMHB4XSBoLVs0MDBweF0gdG9wLWZ1bGwgcmlnaHQtWzgwcHhdIG92ZXJmbG93LWhpZGRlbiByb3VuZGVkLWItM3hsJz5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY2xhc3NOYW1lPSdiZy1bIzFGMUQyQl0gdy1mdWxsIGxnOnJpZ2h0LTAgaC1mdWxsIHRyYW5zaXRpb24tYWxsIHotNTAgJ1xyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICB7LyogT3JkZXJzICovfVxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncmVsYXRpdmUgcHQtMTYgbGc6cHQtOCB0ZXh0LWdyYXktMzAwIHAtOCBoLWZ1bGwnPlxyXG4gICAgICAgICAgICAgIDxJb0Nsb3NlQ2lyY2xlIGNsYXNzTmFtZT0nbGc6aGlkZGVuIGFic29sdXRlIGxlZnQtNCB0b3AtNCBwLTMgYm94LWNvbnRlbnQgdGV4dC1ncmF5LTMwMCBiZy1bIzI2MjgzN10gcm91bmRlZC1mdWxsIHRleHQteGwnIC8+XHJcbiAgICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT0ndGV4dC00eGwgbXktNCBnYXAtMyB3LWZ1bGwgdGV4dC1jZW50ZXIgZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXInPlxyXG4gICAgICAgICAgICAgICAgTWlzIGZhdm9yaXRvcyA8SW9IZWFydFNoYXJwIGNsYXNzTmFtZT0ndGV4dC1wcmltYXJ5JyAvPlxyXG4gICAgICAgICAgICAgIDwvaDE+XHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J210LTEyJz5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdoLVs0MDBweF0gbWQ6aC1bNzAwcHhdIGxnOmgtWzI5MHB4XSBvdmVyZmxvdy15LXNjcm9sbCc+XHJcbiAgICAgICAgICAgICAgICAgIHsvKiBQcm9kdWN0ICovfVxyXG5cclxuICAgICAgICAgICAgICAgICAge2hlYXJkLmxlbmd0aCA+IDBcclxuICAgICAgICAgICAgICAgICAgICA/IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVhcmQubWFwKChjYXIpID0+IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J2JnLVsjMjYyODM3XSBwLTQgcm91bmRlZC14bCBtYi00J1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtjYXIuaWR9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2dyaWQgZ3JpZC1jb2xzLTYnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY29sLXNwYW4tNSBmbGV4IGl0ZW1zLWNlbnRlciBnYXAtNSc+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0PScnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9e2Ake0dsb2JhbC51cmxJbWFnZXN9L2l0ZW1zcG9ydGFmb2xpb3MvJHtjYXIuaW1hZ2VuMX1gfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSd3LTEwIGgtMTAgb2JqZWN0LWNvdmVyJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzc05hbWU9J3RleHQtMnhsIGxpbmUtY2xhbXAtMiBvdmVyZmxvdy1oaWRkZW4nPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y2FyLnRpdHVsb31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDU+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9J3RleHQtbGcgdGV4dC1ncmF5LTUwMCc+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjYXBpdGFsaXplRmlyc3RMZXR0ZXIoY2FyLmNhdGVnb3JpYSl9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgZ2FwLTMnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxWaXN1YWxpemFyIHByb2R1Y3RvPXtjYXJ9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qIDxDb21wcmFyIHByb2R1Y3RvPXtjYXJ9IGNvbnRhZG9yPXsxfS8+ICovfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICApKVxyXG4gICAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgIDogKFxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3ctZnVsbCBoLWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXInPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9J3ctZnVsbCB0ZXh0LWNlbnRlciB0ZXh0LTN4bCc+QXVuIG5vIHRpZW5lcyBwcm9kdWN0b3MgZmF2b3JpdG9zLiA8YnIgLz4gQ29taWVuemEgYSBsbGVuYXJsby48L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L3NlY3Rpb24+XHJcbiAgICAgIDwvQ1NTVHJhbnNpdGlvbj5cclxuICAgIDwvPlxyXG4gIClcclxufVxyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJJb0Nsb3NlQ2lyY2xlIiwiSW9IZWFydFNoYXJwIiwiQ1NTVHJhbnNpdGlvbiIsInVzZUF1dGgiLCJHbG9iYWwiLCJjYXBpdGFsaXplRmlyc3RMZXR0ZXIiLCJWaXN1YWxpemFyIiwiSGVhcmRNb2RhbCIsIm9wZW4iLCJoZWFyZCIsImluIiwidGltZW91dCIsImNsYXNzTmFtZXMiLCJ1bm1vdW50T25FeGl0Iiwic2VjdGlvbiIsImNsYXNzTmFtZSIsImRpdiIsImgxIiwibGVuZ3RoIiwibWFwIiwiY2FyIiwiaW1nIiwiYWx0Iiwic3JjIiwidXJsSW1hZ2VzIiwiaW1hZ2VuMSIsImg1IiwidGl0dWxvIiwicCIsImNhdGVnb3JpYSIsInByb2R1Y3RvIiwiaWQiLCJiciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/estructura/HeardModal.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/estructura/heard/Visualizar.tsx":
/*!********************************************************!*\
  !*** ./src/components/estructura/heard/Visualizar.tsx ***!
  \********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Visualizar: function() { return /* binding */ Visualizar; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _components_shared_Helper_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/shared/Helper/global */ \"(app-pages-browser)/./src/components/shared/Helper/global.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _barrel_optimize_names_IoEyeSharp_react_icons_io5__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=IoEyeSharp!=!react-icons/io5 */ \"(app-pages-browser)/./node_modules/react-icons/io5/index.esm.js\");\n/* harmony import */ var viewerjs_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viewerjs-react */ \"(app-pages-browser)/./node_modules/viewerjs-react/dist/index.modern.js\");\n\n\n\n\n\nconst Visualizar = (param)=>{\n    let { producto } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n        className: \"border border-red-500 p-2 rounded-lg h-fit cursor-pointer relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_IoEyeSharp_react_icons_io5__WEBPACK_IMPORTED_MODULE_4__.IoEyeSharp, {\n                className: \"text-red-500\",\n                title: \"Ver\"\n            }, void 0, false, {\n                fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\heard\\\\Visualizar.tsx\",\n                lineNumber: 18,\n                columnNumber: 7\n            }, undefined),\n            producto.imagen1 && // @ts-expect-error: Type 'any' has no properties in common with type 'Autoplay'\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(viewerjs_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                className: \"absolute w-full h-full inset-0 opacity-0\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                    alt: \"\",\n                    src: \"\".concat(_components_shared_Helper_global__WEBPACK_IMPORTED_MODULE_1__.Global.urlImages, \"/itemsportafolios/\").concat(producto.imagen1),\n                    className: \"w-10 h-10 object-cover\",\n                    title: \"Visualizar\"\n                }, void 0, false, {\n                    fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\heard\\\\Visualizar.tsx\",\n                    lineNumber: 22,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\heard\\\\Visualizar.tsx\",\n                lineNumber: 21,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\jhosep\\\\logosperu\\\\web_next\\\\src\\\\components\\\\estructura\\\\heard\\\\Visualizar.tsx\",\n        lineNumber: 15,\n        columnNumber: 5\n    }, undefined);\n};\n_c = Visualizar;\nvar _c;\n$RefreshReg$(_c, \"Visualizar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2VzdHJ1Y3R1cmEvaGVhcmQvVmlzdWFsaXphci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMEQ7QUFFakM7QUFDbUI7QUFDTjtBQU0vQixNQUFNSSxhQUF1QztRQUFDLEVBQ25EQyxRQUFRLEVBQ1Q7SUFDQyxxQkFDRSw4REFBQ0M7UUFDQ0MsV0FBVTs7MEJBRVYsOERBQUNMLHlGQUFVQTtnQkFBQ0ssV0FBVTtnQkFBZUMsT0FBTTs7Ozs7O1lBQzFDSCxTQUFTSSxPQUFPLElBQ2pCLGdGQUFnRjswQkFDOUUsOERBQUNOLHNEQUFTQTtnQkFBQ0ksV0FBVTswQkFDbkIsNEVBQUNHO29CQUNDQyxLQUFJO29CQUNKQyxLQUFLLEdBQXdDUCxPQUFyQ0wsb0VBQU1BLENBQUNhLFNBQVMsRUFBQyxzQkFBcUMsT0FBakJSLFNBQVNJLE9BQU87b0JBQzdERixXQUFVO29CQUNWQyxPQUFNOzs7Ozs7Ozs7Ozs7Ozs7OztBQU1sQixFQUFDO0tBckJZSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9lc3RydWN0dXJhL2hlYXJkL1Zpc3VhbGl6YXIudHN4PzUwOWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2xvYmFsIH0gZnJvbSAnQC9jb21wb25lbnRzL3NoYXJlZC9IZWxwZXIvZ2xvYmFsJ1xyXG5pbXBvcnQgeyBjYXJyaXRvIH0gZnJvbSAnQC9jb21wb25lbnRzL3NoYXJlZC9pbnRlcmZhY2VzL2ludGVyZmFjZXMnXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHsgSW9FeWVTaGFycCB9IGZyb20gJ3JlYWN0LWljb25zL2lvNSdcclxuaW1wb3J0IFJWaWV3ZXJKUyBmcm9tICd2aWV3ZXJqcy1yZWFjdCdcclxuXHJcbmludGVyZmFjZSBDb21wb25lbnRQcm9wcyB7XHJcbiAgcHJvZHVjdG86IGNhcnJpdG9cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFZpc3VhbGl6YXI6IFJlYWN0LkZDPENvbXBvbmVudFByb3BzPiA9ICh7XHJcbiAgcHJvZHVjdG9cclxufSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8cFxyXG4gICAgICBjbGFzc05hbWU9J2JvcmRlciBib3JkZXItcmVkLTUwMCBwLTIgcm91bmRlZC1sZyBoLWZpdCBjdXJzb3ItcG9pbnRlciByZWxhdGl2ZSdcclxuICAgID5cclxuICAgICAgPElvRXllU2hhcnAgY2xhc3NOYW1lPSd0ZXh0LXJlZC01MDAnIHRpdGxlPSdWZXInIC8+XHJcbiAgICAgIHtwcm9kdWN0by5pbWFnZW4xICYmIChcclxuICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvcjogVHlwZSAnYW55JyBoYXMgbm8gcHJvcGVydGllcyBpbiBjb21tb24gd2l0aCB0eXBlICdBdXRvcGxheSdcclxuICAgICAgICA8UlZpZXdlckpTIGNsYXNzTmFtZT0nYWJzb2x1dGUgdy1mdWxsIGgtZnVsbCBpbnNldC0wIG9wYWNpdHktMCc+XHJcbiAgICAgICAgICA8aW1nXHJcbiAgICAgICAgICAgIGFsdD0nJ1xyXG4gICAgICAgICAgICBzcmM9e2Ake0dsb2JhbC51cmxJbWFnZXN9L2l0ZW1zcG9ydGFmb2xpb3MvJHtwcm9kdWN0by5pbWFnZW4xfWB9XHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT0ndy0xMCBoLTEwIG9iamVjdC1jb3ZlcidcclxuICAgICAgICAgICAgdGl0bGU9J1Zpc3VhbGl6YXInXHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgIDwvUlZpZXdlckpTPlxyXG4gICAgICApfVxyXG4gICAgPC9wPlxyXG4gIClcclxufVxyXG4iXSwibmFtZXMiOlsiR2xvYmFsIiwiUmVhY3QiLCJJb0V5ZVNoYXJwIiwiUlZpZXdlckpTIiwiVmlzdWFsaXphciIsInByb2R1Y3RvIiwicCIsImNsYXNzTmFtZSIsInRpdGxlIiwiaW1hZ2VuMSIsImltZyIsImFsdCIsInNyYyIsInVybEltYWdlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/estructura/heard/Visualizar.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/viewerjs-react/dist/index.modern.js":
/*!**********************************************************!*\
  !*** ./node_modules/viewerjs-react/dist/index.modern.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var viewerjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viewerjs */ \"(app-pages-browser)/./node_modules/viewerjs/dist/viewer.js\");\n/* harmony import */ var viewerjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(viewerjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var viewerjs_dist_viewer_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viewerjs/dist/viewer.css */ \"(app-pages-browser)/./node_modules/viewerjs/dist/viewer.css\");\n\n\n\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar RViewerJS = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(RViewerJS, _React$PureComponent);\n\n  function RViewerJS() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.viewer = null;\n\n    _this.onRef = function (el) {\n      if (!el) {\n        return;\n      }\n\n      if (_this.viewer) {\n        _this.viewer.destroy();\n      }\n\n      _this.viewer = new (viewerjs__WEBPACK_IMPORTED_MODULE_1___default())(el, _this.props.options);\n    };\n\n    return _this;\n  }\n\n  var _proto = RViewerJS.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (this.viewer) {\n      this.viewer.update();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.viewer) {\n      this.viewer.destroy();\n    }\n\n    this.viewer = null;\n  };\n\n  _proto.render = function render() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n      ref: this.onRef,\n      className: this.props.className\n    }, this.props.children);\n  };\n\n  return RViewerJS;\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (RViewerJS);\n//# sourceMappingURL=index.modern.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy92aWV3ZXJqcy1yZWFjdC9kaXN0L2luZGV4Lm1vZGVybi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7QUFDckI7QUFDRTs7QUFFbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEseUJBQXlCLGlEQUFRO0FBQ2pDOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0EsQ0FBQyxDQUFDLGdEQUFhOztBQUVmLCtEQUFlLFNBQVMsRUFBQztBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdmlld2VyanMtcmVhY3QvZGlzdC9pbmRleC5tb2Rlcm4uanM/YWIxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVFbGVtZW50LCBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFZpZXdlckpTIGZyb20gJ3ZpZXdlcmpzJztcbmltcG9ydCAndmlld2VyanMvZGlzdC92aWV3ZXIuY3NzJztcblxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufVxuXG52YXIgUlZpZXdlckpTID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSVmlld2VySlMsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSVmlld2VySlMoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfUmVhY3QkUHVyZUNvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgX3RoaXMudmlld2VyID0gbnVsbDtcblxuICAgIF90aGlzLm9uUmVmID0gZnVuY3Rpb24gKGVsKSB7XG4gICAgICBpZiAoIWVsKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKF90aGlzLnZpZXdlcikge1xuICAgICAgICBfdGhpcy52aWV3ZXIuZGVzdHJveSgpO1xuICAgICAgfVxuXG4gICAgICBfdGhpcy52aWV3ZXIgPSBuZXcgVmlld2VySlMoZWwsIF90aGlzLnByb3BzLm9wdGlvbnMpO1xuICAgIH07XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUlZpZXdlckpTLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgIGlmICh0aGlzLnZpZXdlcikge1xuICAgICAgdGhpcy52aWV3ZXIudXBkYXRlKCk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnZpZXdlcikge1xuICAgICAgdGhpcy52aWV3ZXIuZGVzdHJveSgpO1xuICAgIH1cblxuICAgIHRoaXMudmlld2VyID0gbnVsbDtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIHJlZjogdGhpcy5vblJlZixcbiAgICAgIGNsYXNzTmFtZTogdGhpcy5wcm9wcy5jbGFzc05hbWVcbiAgICB9LCB0aGlzLnByb3BzLmNoaWxkcmVuKTtcbiAgfTtcblxuICByZXR1cm4gUlZpZXdlckpTO1xufShQdXJlQ29tcG9uZW50KTtcblxuZXhwb3J0IGRlZmF1bHQgUlZpZXdlckpTO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubW9kZXJuLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/viewerjs-react/dist/index.modern.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/viewerjs/dist/viewer.js":
/*!**********************************************!*\
  !*** ./node_modules/viewerjs/dist/viewer.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/*!\n * Viewer.js v1.11.6\n * https://fengyuanchen.github.io/viewerjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2023-09-17T03:16:38.052Z\n */\n\n(function (global, factory) {\n   true ? module.exports = factory() :\n  0;\n})(this, (function () { 'use strict';\n\n  function ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n      var o = Object.getOwnPropertySymbols(e);\n      r && (o = o.filter(function (r) {\n        return Object.getOwnPropertyDescriptor(e, r).enumerable;\n      })), t.push.apply(t, o);\n    }\n    return t;\n  }\n  function _objectSpread2(e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var t = null != arguments[r] ? arguments[r] : {};\n      r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n        _defineProperty(e, r, t[r]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n        Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n      });\n    }\n    return e;\n  }\n  function _typeof(o) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n      return typeof o;\n    } : function (o) {\n      return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n\n  var DEFAULTS = {\n    /**\n     * Enable a modal backdrop, specify `static` for a backdrop\n     * which doesn't close the modal on click.\n     * @type {boolean}\n     */\n    backdrop: true,\n    /**\n     * Show the button on the top-right of the viewer.\n     * @type {boolean}\n     */\n    button: true,\n    /**\n     * Show the navbar.\n     * @type {boolean | number}\n     */\n    navbar: true,\n    /**\n     * Specify the visibility and the content of the title.\n     * @type {boolean | number | Function | Array}\n     */\n    title: true,\n    /**\n     * Show the toolbar.\n     * @type {boolean | number | Object}\n     */\n    toolbar: true,\n    /**\n     * Custom class name(s) to add to the viewer's root element.\n     * @type {string}\n     */\n    className: '',\n    /**\n     * Define where to put the viewer in modal mode.\n     * @type {string | Element}\n     */\n    container: 'body',\n    /**\n     * Filter the images for viewing. Return true if the image is viewable.\n     * @type {Function}\n     */\n    filter: null,\n    /**\n     * Enable to request fullscreen when play.\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/FullscreenOptions}\n     * @type {boolean|FullscreenOptions}\n     */\n    fullscreen: true,\n    /**\n     * Define the extra attributes to inherit from the original image.\n     * @type {Array}\n     */\n    inheritedAttributes: ['crossOrigin', 'decoding', 'isMap', 'loading', 'referrerPolicy', 'sizes', 'srcset', 'useMap'],\n    /**\n     * Define the initial coverage of the viewing image.\n     * @type {number}\n     */\n    initialCoverage: 0.9,\n    /**\n     * Define the initial index of the image for viewing.\n     * @type {number}\n     */\n    initialViewIndex: 0,\n    /**\n     * Enable inline mode.\n     * @type {boolean}\n     */\n    inline: false,\n    /**\n     * The amount of time to delay between automatically cycling an image when playing.\n     * @type {number}\n     */\n    interval: 5000,\n    /**\n     * Enable keyboard support.\n     * @type {boolean}\n     */\n    keyboard: true,\n    /**\n     * Focus the viewer when initialized.\n     * @type {boolean}\n     */\n    focus: true,\n    /**\n     * Indicate if show a loading spinner when load image or not.\n     * @type {boolean}\n     */\n    loading: true,\n    /**\n     * Indicate if enable loop viewing or not.\n     * @type {boolean}\n     */\n    loop: true,\n    /**\n     * Min width of the viewer in inline mode.\n     * @type {number}\n     */\n    minWidth: 200,\n    /**\n     * Min height of the viewer in inline mode.\n     * @type {number}\n     */\n    minHeight: 100,\n    /**\n     * Enable to move the image.\n     * @type {boolean}\n     */\n    movable: true,\n    /**\n     * Enable to rotate the image.\n     * @type {boolean}\n     */\n    rotatable: true,\n    /**\n     * Enable to scale the image.\n     * @type {boolean}\n     */\n    scalable: true,\n    /**\n     * Enable to zoom the image.\n     * @type {boolean}\n     */\n    zoomable: true,\n    /**\n     * Enable to zoom the current image by dragging on the touch screen.\n     * @type {boolean}\n     */\n    zoomOnTouch: true,\n    /**\n     * Enable to zoom the image by wheeling mouse.\n     * @type {boolean}\n     */\n    zoomOnWheel: true,\n    /**\n     * Enable to slide to the next or previous image by swiping on the touch screen.\n     * @type {boolean}\n     */\n    slideOnTouch: true,\n    /**\n     * Indicate if toggle the image size between its natural size\n     * and initial size when double click on the image or not.\n     * @type {boolean}\n     */\n    toggleOnDblclick: true,\n    /**\n     * Show the tooltip with image ratio (percentage) when zoom in or zoom out.\n     * @type {boolean}\n     */\n    tooltip: true,\n    /**\n     * Enable CSS3 Transition for some special elements.\n     * @type {boolean}\n     */\n    transition: true,\n    /**\n     * Define the CSS `z-index` value of viewer in modal mode.\n     * @type {number}\n     */\n    zIndex: 2015,\n    /**\n     * Define the CSS `z-index` value of viewer in inline mode.\n     * @type {number}\n     */\n    zIndexInline: 0,\n    /**\n     * Define the ratio when zoom the image by wheeling mouse.\n     * @type {number}\n     */\n    zoomRatio: 0.1,\n    /**\n     * Define the min ratio of the image when zoom out.\n     * @type {number}\n     */\n    minZoomRatio: 0.01,\n    /**\n     * Define the max ratio of the image when zoom in.\n     * @type {number}\n     */\n    maxZoomRatio: 100,\n    /**\n     * Define where to get the original image URL for viewing.\n     * @type {string | Function}\n     */\n    url: 'src',\n    /**\n     * Event shortcuts.\n     * @type {Function}\n     */\n    ready: null,\n    show: null,\n    shown: null,\n    hide: null,\n    hidden: null,\n    view: null,\n    viewed: null,\n    move: null,\n    moved: null,\n    rotate: null,\n    rotated: null,\n    scale: null,\n    scaled: null,\n    zoom: null,\n    zoomed: null,\n    play: null,\n    stop: null\n  };\n\n  var TEMPLATE = '<div class=\"viewer-container\" tabindex=\"-1\" touch-action=\"none\">' + '<div class=\"viewer-canvas\"></div>' + '<div class=\"viewer-footer\">' + '<div class=\"viewer-title\"></div>' + '<div class=\"viewer-toolbar\"></div>' + '<div class=\"viewer-navbar\">' + '<ul class=\"viewer-list\" role=\"navigation\"></ul>' + '</div>' + '</div>' + '<div class=\"viewer-tooltip\" role=\"alert\" aria-hidden=\"true\"></div>' + '<div class=\"viewer-button\" data-viewer-action=\"mix\" role=\"button\"></div>' + '<div class=\"viewer-player\"></div>' + '</div>';\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'viewer';\n\n  // Actions\n  var ACTION_MOVE = 'move';\n  var ACTION_SWITCH = 'switch';\n  var ACTION_ZOOM = 'zoom';\n\n  // Classes\n  var CLASS_ACTIVE = \"\".concat(NAMESPACE, \"-active\");\n  var CLASS_CLOSE = \"\".concat(NAMESPACE, \"-close\");\n  var CLASS_FADE = \"\".concat(NAMESPACE, \"-fade\");\n  var CLASS_FIXED = \"\".concat(NAMESPACE, \"-fixed\");\n  var CLASS_FULLSCREEN = \"\".concat(NAMESPACE, \"-fullscreen\");\n  var CLASS_FULLSCREEN_EXIT = \"\".concat(NAMESPACE, \"-fullscreen-exit\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_HIDE_MD_DOWN = \"\".concat(NAMESPACE, \"-hide-md-down\");\n  var CLASS_HIDE_SM_DOWN = \"\".concat(NAMESPACE, \"-hide-sm-down\");\n  var CLASS_HIDE_XS_DOWN = \"\".concat(NAMESPACE, \"-hide-xs-down\");\n  var CLASS_IN = \"\".concat(NAMESPACE, \"-in\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_LOADING = \"\".concat(NAMESPACE, \"-loading\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\");\n  var CLASS_OPEN = \"\".concat(NAMESPACE, \"-open\");\n  var CLASS_SHOW = \"\".concat(NAMESPACE, \"-show\");\n  var CLASS_TRANSITION = \"\".concat(NAMESPACE, \"-transition\");\n\n  // Native events\n  var EVENT_CLICK = 'click';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_DRAG_START = 'dragstart';\n  var EVENT_FOCUSIN = 'focusin';\n  var EVENT_KEY_DOWN = 'keydown';\n  var EVENT_LOAD = 'load';\n  var EVENT_ERROR = 'error';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_RESIZE = 'resize';\n  var EVENT_TRANSITION_END = 'transitionend';\n  var EVENT_WHEEL = 'wheel';\n\n  // Custom events\n  var EVENT_READY = 'ready';\n  var EVENT_SHOW = 'show';\n  var EVENT_SHOWN = 'shown';\n  var EVENT_HIDE = 'hide';\n  var EVENT_HIDDEN = 'hidden';\n  var EVENT_VIEW = 'view';\n  var EVENT_VIEWED = 'viewed';\n  var EVENT_MOVE = 'move';\n  var EVENT_MOVED = 'moved';\n  var EVENT_ROTATE = 'rotate';\n  var EVENT_ROTATED = 'rotated';\n  var EVENT_SCALE = 'scale';\n  var EVENT_SCALED = 'scaled';\n  var EVENT_ZOOM = 'zoom';\n  var EVENT_ZOOMED = 'zoomed';\n  var EVENT_PLAY = 'play';\n  var EVENT_STOP = 'stop';\n\n  // Data keys\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n\n  // RegExps\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  // Misc\n  var BUTTONS = ['zoom-in', 'zoom-out', 'one-to-one', 'reset', 'prev', 'play', 'next', 'rotate-left', 'rotate-right', 'flip-horizontal', 'flip-vertical'];\n\n  /**\n   * Check if the given value is a string.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a string, else `false`.\n   */\n  function isString(value) {\n    return typeof value === 'string';\n  }\n\n  /**\n   * Check if the given value is not a number.\n   */\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\n        var length = data.length;\n        var i;\n        for (i = 0; i < length; i += 1) {\n          if (callback.call(data, data[i], i, data) === false) {\n            break;\n          }\n        }\n      } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Extend the given object.\n   * @param {*} obj - The object to be extended.\n   * @param {*} args - The rest objects which will be merged to the first object.\n   * @returns {Object} The extended object.\n   */\n  var assign = Object.assign || function assign(obj) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (isObject(obj) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            obj[key] = arg[key];\n          });\n        }\n      });\n    }\n    return obj;\n  };\n  var REGEXP_SUFFIX = /^(?:width|height|left|top|marginLeft|marginTop)$/;\n\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value += 'px';\n      }\n      style[property] = value;\n    });\n  }\n\n  /**\n   * Escape a string for using in HTML.\n   * @param {String} value - The string to escape.\n   * @returns {String} Returns the escaped string.\n   */\n  function escapeHTMLEntities(value) {\n    return isString(value) ? value.replace(/&(?!amp;|quot;|#39;|lt;|gt;)/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;') : value;\n  }\n\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n  function hasClass(element, value) {\n    if (!element || !value) {\n      return false;\n    }\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n  function addClass(element, value) {\n    if (!element || !value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n    var className = element.className.trim();\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n  function removeClass(element, value) {\n    if (!element || !value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    }\n\n    // IE10-11 doesn't support the second parameter of `classList.toggle`\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n  function hyphenate(value) {\n    return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n  }\n\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n    return element.getAttribute(\"data-\".concat(hyphenate(name)));\n  }\n\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(hyphenate(name)), data);\n    }\n  }\n  var onceSupported = function () {\n    var supported = false;\n    if (IS_BROWSER) {\n      var once = false;\n      var listener = function listener() {};\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n    return supported;\n  }();\n\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n      element.removeEventListener(event, handler, options);\n    });\n  }\n\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n          listeners = _element$listeners === void 0 ? {} : _element$listeners;\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n          listener.apply(element, args);\n        };\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n      element.addEventListener(event, _handler, options);\n    });\n  }\n\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @param {Object} options - The additional event options.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n  function dispatchEvent(element, type, data, options) {\n    var event;\n\n    // Event and CustomEvent on IE9-11 are global objects, not constructors\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, _objectSpread2({\n        bubbles: true,\n        cancelable: true,\n        detail: data\n      }, options));\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n    return element.dispatchEvent(event);\n  }\n\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n    var values = [];\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    }\n\n    // Rotate should come first before scale to match orientation transform\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n\n  /**\n   * Get an image name from an image url.\n   * @param {string} url - The target url.\n   * @example\n   * // picture.jpg\n   * getImageNameFromURL('https://domain.com/path/to/picture.jpg?size=1280×960')\n   * @returns {string} A string contains the image name.\n   */\n  function getImageNameFromURL(url) {\n    return isString(url) ? decodeURIComponent(url.replace(/^.*\\//, '').replace(/[?&#].*$/, '')) : '';\n  }\n  var IS_SAFARI = WINDOW.navigator && /Version\\/\\d+(\\.\\d+)+?\\s+Safari/i.test(WINDOW.navigator.userAgent);\n\n  /**\n   * Get an image's natural sizes.\n   * @param {string} image - The target image.\n   * @param {Object} options - The viewer options.\n   * @param {Function} callback - The callback function.\n   * @returns {HTMLImageElement} The new image.\n   */\n  function getImageNaturalSizes(image, options, callback) {\n    var newImage = document.createElement('img');\n\n    // Modern browsers (except Safari)\n    if (image.naturalWidth && !IS_SAFARI) {\n      callback(image.naturalWidth, image.naturalHeight);\n      return newImage;\n    }\n    var body = document.body || document.documentElement;\n    newImage.onload = function () {\n      callback(newImage.width, newImage.height);\n      if (!IS_SAFARI) {\n        body.removeChild(newImage);\n      }\n    };\n    forEach(options.inheritedAttributes, function (name) {\n      var value = image.getAttribute(name);\n      if (value !== null) {\n        newImage.setAttribute(name, value);\n      }\n    });\n    newImage.src = image.src;\n\n    // iOS Safari will convert the image automatically\n    // with its orientation once append it into DOM\n    if (!IS_SAFARI) {\n      newImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n      body.appendChild(newImage);\n    }\n    return newImage;\n  }\n\n  /**\n   * Get the related class name of a responsive type number.\n   * @param {string} type - The responsive type.\n   * @returns {string} The related class name.\n   */\n  function getResponsiveClass(type) {\n    switch (type) {\n      case 2:\n        return CLASS_HIDE_XS_DOWN;\n      case 3:\n        return CLASS_HIDE_SM_DOWN;\n      case 4:\n        return CLASS_HIDE_MD_DOWN;\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      timeStamp: Date.now(),\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n        startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initViewer();\n      this.initList();\n      this.renderViewer();\n    },\n    initBody: function initBody() {\n      var ownerDocument = this.element.ownerDocument;\n      var body = ownerDocument.body || ownerDocument.documentElement;\n      this.body = body;\n      this.scrollbarWidth = window.innerWidth - ownerDocument.documentElement.clientWidth;\n      this.initialBodyPaddingRight = body.style.paddingRight;\n      this.initialBodyComputedPaddingRight = window.getComputedStyle(body).paddingRight;\n    },\n    initContainer: function initContainer() {\n      this.containerData = {\n        width: window.innerWidth,\n        height: window.innerHeight\n      };\n    },\n    initViewer: function initViewer() {\n      var options = this.options,\n        parent = this.parent;\n      var viewerData;\n      if (options.inline) {\n        viewerData = {\n          width: Math.max(parent.offsetWidth, options.minWidth),\n          height: Math.max(parent.offsetHeight, options.minHeight)\n        };\n        this.parentData = viewerData;\n      }\n      if (this.fulled || !viewerData) {\n        viewerData = this.containerData;\n      }\n      this.viewerData = assign({}, viewerData);\n    },\n    renderViewer: function renderViewer() {\n      if (this.options.inline && !this.fulled) {\n        setStyle(this.viewer, this.viewerData);\n      }\n    },\n    initList: function initList() {\n      var _this = this;\n      var element = this.element,\n        options = this.options,\n        list = this.list;\n      var items = [];\n\n      // initList may be called in this.update, so should keep idempotent\n      list.innerHTML = '';\n      forEach(this.images, function (image, index) {\n        var src = image.src;\n        var alt = image.alt || getImageNameFromURL(src);\n        var url = _this.getImageURL(image);\n        if (src || url) {\n          var item = document.createElement('li');\n          var img = document.createElement('img');\n          forEach(options.inheritedAttributes, function (name) {\n            var value = image.getAttribute(name);\n            if (value !== null) {\n              img.setAttribute(name, value);\n            }\n          });\n          if (options.navbar) {\n            img.src = src || url;\n          }\n          img.alt = alt;\n          img.setAttribute('data-original-url', url || src);\n          item.setAttribute('data-index', index);\n          item.setAttribute('data-viewer-action', 'view');\n          item.setAttribute('role', 'button');\n          if (options.keyboard) {\n            item.setAttribute('tabindex', 0);\n          }\n          item.appendChild(img);\n          list.appendChild(item);\n          items.push(item);\n        }\n      });\n      this.items = items;\n      forEach(items, function (item) {\n        var image = item.firstElementChild;\n        var onLoad;\n        var onError;\n        setData(image, 'filled', true);\n        if (options.loading) {\n          addClass(item, CLASS_LOADING);\n        }\n        addListener(image, EVENT_LOAD, onLoad = function onLoad(event) {\n          removeListener(image, EVENT_ERROR, onError);\n          if (options.loading) {\n            removeClass(item, CLASS_LOADING);\n          }\n          _this.loadImage(event);\n        }, {\n          once: true\n        });\n        addListener(image, EVENT_ERROR, onError = function onError() {\n          removeListener(image, EVENT_LOAD, onLoad);\n          if (options.loading) {\n            removeClass(item, CLASS_LOADING);\n          }\n        }, {\n          once: true\n        });\n      });\n      if (options.transition) {\n        addListener(element, EVENT_VIEWED, function () {\n          addClass(list, CLASS_TRANSITION);\n        }, {\n          once: true\n        });\n      }\n    },\n    renderList: function renderList() {\n      var index = this.index;\n      var item = this.items[index];\n      if (!item) {\n        return;\n      }\n      var next = item.nextElementSibling;\n      var gutter = parseInt(window.getComputedStyle(next || item).marginLeft, 10);\n      var offsetWidth = item.offsetWidth;\n      var outerWidth = offsetWidth + gutter;\n\n      // Place the active item in the center of the screen\n      setStyle(this.list, assign({\n        width: outerWidth * this.length - gutter\n      }, getTransforms({\n        translateX: (this.viewerData.width - offsetWidth) / 2 - outerWidth * index\n      })));\n    },\n    resetList: function resetList() {\n      var list = this.list;\n      list.innerHTML = '';\n      removeClass(list, CLASS_TRANSITION);\n      setStyle(list, getTransforms({\n        translateX: 0\n      }));\n    },\n    initImage: function initImage(done) {\n      var _this2 = this;\n      var options = this.options,\n        image = this.image,\n        viewerData = this.viewerData;\n      var footerHeight = this.footer.offsetHeight;\n      var viewerWidth = viewerData.width;\n      var viewerHeight = Math.max(viewerData.height - footerHeight, footerHeight);\n      var oldImageData = this.imageData || {};\n      var sizingImage;\n      this.imageInitializing = {\n        abort: function abort() {\n          sizingImage.onload = null;\n        }\n      };\n      sizingImage = getImageNaturalSizes(image, options, function (naturalWidth, naturalHeight) {\n        var aspectRatio = naturalWidth / naturalHeight;\n        var initialCoverage = Math.max(0, Math.min(1, options.initialCoverage));\n        var width = viewerWidth;\n        var height = viewerHeight;\n        _this2.imageInitializing = false;\n        if (viewerHeight * aspectRatio > viewerWidth) {\n          height = viewerWidth / aspectRatio;\n        } else {\n          width = viewerHeight * aspectRatio;\n        }\n        initialCoverage = isNumber(initialCoverage) ? initialCoverage : 0.9;\n        width = Math.min(width * initialCoverage, naturalWidth);\n        height = Math.min(height * initialCoverage, naturalHeight);\n        var left = (viewerWidth - width) / 2;\n        var top = (viewerHeight - height) / 2;\n        var imageData = {\n          left: left,\n          top: top,\n          x: left,\n          y: top,\n          width: width,\n          height: height,\n          oldRatio: 1,\n          ratio: width / naturalWidth,\n          aspectRatio: aspectRatio,\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight\n        };\n        var initialImageData = assign({}, imageData);\n        if (options.rotatable) {\n          imageData.rotate = oldImageData.rotate || 0;\n          initialImageData.rotate = 0;\n        }\n        if (options.scalable) {\n          imageData.scaleX = oldImageData.scaleX || 1;\n          imageData.scaleY = oldImageData.scaleY || 1;\n          initialImageData.scaleX = 1;\n          initialImageData.scaleY = 1;\n        }\n        _this2.imageData = imageData;\n        _this2.initialImageData = initialImageData;\n        if (done) {\n          done();\n        }\n      });\n    },\n    renderImage: function renderImage(done) {\n      var _this3 = this;\n      var image = this.image,\n        imageData = this.imageData;\n      setStyle(image, assign({\n        width: imageData.width,\n        height: imageData.height,\n        // XXX: Not to use translateX/Y to avoid image shaking when zooming\n        marginLeft: imageData.x,\n        marginTop: imageData.y\n      }, getTransforms(imageData)));\n      if (done) {\n        if ((this.viewing || this.moving || this.rotating || this.scaling || this.zooming) && this.options.transition && hasClass(image, CLASS_TRANSITION)) {\n          var onTransitionEnd = function onTransitionEnd() {\n            _this3.imageRendering = false;\n            done();\n          };\n          this.imageRendering = {\n            abort: function abort() {\n              removeListener(image, EVENT_TRANSITION_END, onTransitionEnd);\n            }\n          };\n          addListener(image, EVENT_TRANSITION_END, onTransitionEnd, {\n            once: true\n          });\n        } else {\n          done();\n        }\n      }\n    },\n    resetImage: function resetImage() {\n      var image = this.image;\n      if (image) {\n        if (this.viewing) {\n          this.viewing.abort();\n        }\n        image.parentNode.removeChild(image);\n        this.image = null;\n        this.title.innerHTML = '';\n      }\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var options = this.options,\n        viewer = this.viewer,\n        canvas = this.canvas;\n      var document = this.element.ownerDocument;\n      addListener(viewer, EVENT_CLICK, this.onClick = this.click.bind(this));\n      addListener(viewer, EVENT_DRAG_START, this.onDragStart = this.dragstart.bind(this));\n      addListener(canvas, EVENT_POINTER_DOWN, this.onPointerDown = this.pointerdown.bind(this));\n      addListener(document, EVENT_POINTER_MOVE, this.onPointerMove = this.pointermove.bind(this));\n      addListener(document, EVENT_POINTER_UP, this.onPointerUp = this.pointerup.bind(this));\n      addListener(document, EVENT_KEY_DOWN, this.onKeyDown = this.keydown.bind(this));\n      addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(viewer, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n      if (options.toggleOnDblclick) {\n        addListener(canvas, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var options = this.options,\n        viewer = this.viewer,\n        canvas = this.canvas;\n      var document = this.element.ownerDocument;\n      removeListener(viewer, EVENT_CLICK, this.onClick);\n      removeListener(viewer, EVENT_DRAG_START, this.onDragStart);\n      removeListener(canvas, EVENT_POINTER_DOWN, this.onPointerDown);\n      removeListener(document, EVENT_POINTER_MOVE, this.onPointerMove);\n      removeListener(document, EVENT_POINTER_UP, this.onPointerUp);\n      removeListener(document, EVENT_KEY_DOWN, this.onKeyDown);\n      removeListener(window, EVENT_RESIZE, this.onResize);\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(viewer, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n      if (options.toggleOnDblclick) {\n        removeListener(canvas, EVENT_DBLCLICK, this.onDblclick);\n      }\n    }\n  };\n\n  var handlers = {\n    click: function click(event) {\n      var options = this.options,\n        imageData = this.imageData;\n      var target = event.target;\n      var action = getData(target, DATA_ACTION);\n      if (!action && target.localName === 'img' && target.parentElement.localName === 'li') {\n        target = target.parentElement;\n        action = getData(target, DATA_ACTION);\n      }\n\n      // Cancel the emulated click when the native click event was triggered.\n      if (IS_TOUCH_DEVICE && event.isTrusted && target === this.canvas) {\n        clearTimeout(this.clickCanvasTimeout);\n      }\n      switch (action) {\n        case 'mix':\n          if (this.played) {\n            this.stop();\n          } else if (options.inline) {\n            if (this.fulled) {\n              this.exit();\n            } else {\n              this.full();\n            }\n          } else {\n            this.hide();\n          }\n          break;\n        case 'hide':\n          if (!this.pointerMoved) {\n            this.hide();\n          }\n          break;\n        case 'view':\n          this.view(getData(target, 'index'));\n          break;\n        case 'zoom-in':\n          this.zoom(0.1, true);\n          break;\n        case 'zoom-out':\n          this.zoom(-0.1, true);\n          break;\n        case 'one-to-one':\n          this.toggle();\n          break;\n        case 'reset':\n          this.reset();\n          break;\n        case 'prev':\n          this.prev(options.loop);\n          break;\n        case 'play':\n          this.play(options.fullscreen);\n          break;\n        case 'next':\n          this.next(options.loop);\n          break;\n        case 'rotate-left':\n          this.rotate(-90);\n          break;\n        case 'rotate-right':\n          this.rotate(90);\n          break;\n        case 'flip-horizontal':\n          this.scaleX(-imageData.scaleX || -1);\n          break;\n        case 'flip-vertical':\n          this.scaleY(-imageData.scaleY || -1);\n          break;\n        default:\n          if (this.played) {\n            this.stop();\n          }\n      }\n    },\n    dblclick: function dblclick(event) {\n      event.preventDefault();\n      if (this.viewed && event.target === this.image) {\n        // Cancel the emulated double click when the native dblclick event was triggered.\n        if (IS_TOUCH_DEVICE && event.isTrusted) {\n          clearTimeout(this.doubleClickImageTimeout);\n        }\n\n        // XXX: No pageX/Y properties in custom event, fallback to the original event.\n        this.toggle(event.isTrusted ? event : event.detail && event.detail.originalEvent);\n      }\n    },\n    load: function load() {\n      var _this = this;\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = false;\n      }\n      var element = this.element,\n        options = this.options,\n        image = this.image,\n        index = this.index,\n        viewerData = this.viewerData;\n      removeClass(image, CLASS_INVISIBLE);\n      if (options.loading) {\n        removeClass(this.canvas, CLASS_LOADING);\n      }\n      image.style.cssText = 'height:0;' + \"margin-left:\".concat(viewerData.width / 2, \"px;\") + \"margin-top:\".concat(viewerData.height / 2, \"px;\") + 'max-width:none!important;' + 'position:relative;' + 'width:0;';\n      this.initImage(function () {\n        toggleClass(image, CLASS_MOVE, options.movable);\n        toggleClass(image, CLASS_TRANSITION, options.transition);\n        _this.renderImage(function () {\n          _this.viewed = true;\n          _this.viewing = false;\n          if (isFunction(options.viewed)) {\n            addListener(element, EVENT_VIEWED, options.viewed, {\n              once: true\n            });\n          }\n          dispatchEvent(element, EVENT_VIEWED, {\n            originalImage: _this.images[index],\n            index: index,\n            image: image\n          }, {\n            cancelable: false\n          });\n        });\n      });\n    },\n    loadImage: function loadImage(event) {\n      var image = event.target;\n      var parent = image.parentNode;\n      var parentWidth = parent.offsetWidth || 30;\n      var parentHeight = parent.offsetHeight || 50;\n      var filled = !!getData(image, 'filled');\n      getImageNaturalSizes(image, this.options, function (naturalWidth, naturalHeight) {\n        var aspectRatio = naturalWidth / naturalHeight;\n        var width = parentWidth;\n        var height = parentHeight;\n        if (parentHeight * aspectRatio > parentWidth) {\n          if (filled) {\n            width = parentHeight * aspectRatio;\n          } else {\n            height = parentWidth / aspectRatio;\n          }\n        } else if (filled) {\n          height = parentWidth / aspectRatio;\n        } else {\n          width = parentHeight * aspectRatio;\n        }\n        setStyle(image, assign({\n          width: width,\n          height: height\n        }, getTransforms({\n          translateX: (parentWidth - width) / 2,\n          translateY: (parentHeight - height) / 2\n        })));\n      });\n    },\n    keydown: function keydown(event) {\n      var options = this.options;\n      if (!options.keyboard) {\n        return;\n      }\n      var keyCode = event.keyCode || event.which || event.charCode;\n      switch (keyCode) {\n        // Enter\n        case 13:\n          if (this.viewer.contains(event.target)) {\n            this.click(event);\n          }\n          break;\n      }\n      if (!this.fulled) {\n        return;\n      }\n      switch (keyCode) {\n        // Escape\n        case 27:\n          if (this.played) {\n            this.stop();\n          } else if (options.inline) {\n            if (this.fulled) {\n              this.exit();\n            }\n          } else {\n            this.hide();\n          }\n          break;\n\n        // Space\n        case 32:\n          if (this.played) {\n            this.stop();\n          }\n          break;\n\n        // ArrowLeft\n        case 37:\n          if (this.played && this.playing) {\n            this.playing.prev();\n          } else {\n            this.prev(options.loop);\n          }\n          break;\n\n        // ArrowUp\n        case 38:\n          // Prevent scroll on Firefox\n          event.preventDefault();\n\n          // Zoom in\n          this.zoom(options.zoomRatio, true);\n          break;\n\n        // ArrowRight\n        case 39:\n          if (this.played && this.playing) {\n            this.playing.next();\n          } else {\n            this.next(options.loop);\n          }\n          break;\n\n        // ArrowDown\n        case 40:\n          // Prevent scroll on Firefox\n          event.preventDefault();\n\n          // Zoom out\n          this.zoom(-options.zoomRatio, true);\n          break;\n\n        // Ctrl + 0\n        case 48:\n        // Fall through\n\n        // Ctrl + 1\n        // eslint-disable-next-line no-fallthrough\n        case 49:\n          if (event.ctrlKey) {\n            event.preventDefault();\n            this.toggle();\n          }\n          break;\n      }\n    },\n    dragstart: function dragstart(event) {\n      if (event.target.localName === 'img') {\n        event.preventDefault();\n      }\n    },\n    pointerdown: function pointerdown(event) {\n      var options = this.options,\n        pointers = this.pointers;\n      var buttons = event.buttons,\n        button = event.button;\n      this.pointerMoved = false;\n      if (!this.viewed || this.showing || this.viewing || this.hiding\n\n      // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && (\n      // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0\n\n      // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      // Prevent default behaviours as page zooming in touch devices.\n      event.preventDefault();\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n      var action = options.movable ? ACTION_MOVE : false;\n      if (options.zoomOnTouch && options.zoomable && Object.keys(pointers).length > 1) {\n        action = ACTION_ZOOM;\n      } else if (options.slideOnTouch && (event.pointerType === 'touch' || event.type === 'touchstart') && this.isSwitchable()) {\n        action = ACTION_SWITCH;\n      }\n      if (options.transition && (action === ACTION_MOVE || action === ACTION_ZOOM)) {\n        removeClass(this.image, CLASS_TRANSITION);\n      }\n      this.action = action;\n    },\n    pointermove: function pointermove(event) {\n      var pointers = this.pointers,\n        action = this.action;\n      if (!this.viewed || !action) {\n        return;\n      }\n      event.preventDefault();\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n      this.change(event);\n    },\n    pointerup: function pointerup(event) {\n      var _this2 = this;\n      var options = this.options,\n        action = this.action,\n        pointers = this.pointers;\n      var pointer;\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          pointer = pointers[touch.identifier];\n          delete pointers[touch.identifier];\n        });\n      } else {\n        pointer = pointers[event.pointerId || 0];\n        delete pointers[event.pointerId || 0];\n      }\n      if (!action) {\n        return;\n      }\n      event.preventDefault();\n      if (options.transition && (action === ACTION_MOVE || action === ACTION_ZOOM)) {\n        addClass(this.image, CLASS_TRANSITION);\n      }\n      this.action = false;\n\n      // Emulate click and double click in touch devices to support backdrop and image zooming (#210).\n      if (IS_TOUCH_DEVICE && action !== ACTION_ZOOM && pointer && Date.now() - pointer.timeStamp < 500) {\n        clearTimeout(this.clickCanvasTimeout);\n        clearTimeout(this.doubleClickImageTimeout);\n        if (options.toggleOnDblclick && this.viewed && event.target === this.image) {\n          if (this.imageClicked) {\n            this.imageClicked = false;\n\n            // This timeout will be cleared later when a native dblclick event is triggering\n            this.doubleClickImageTimeout = setTimeout(function () {\n              dispatchEvent(_this2.image, EVENT_DBLCLICK, {\n                originalEvent: event\n              });\n            }, 50);\n          } else {\n            this.imageClicked = true;\n\n            // The default timing of a double click in Windows is 500 ms\n            this.doubleClickImageTimeout = setTimeout(function () {\n              _this2.imageClicked = false;\n            }, 500);\n          }\n        } else {\n          this.imageClicked = false;\n          if (options.backdrop && options.backdrop !== 'static' && event.target === this.canvas) {\n            // This timeout will be cleared later when a native click event is triggering\n            this.clickCanvasTimeout = setTimeout(function () {\n              dispatchEvent(_this2.canvas, EVENT_CLICK, {\n                originalEvent: event\n              });\n            }, 50);\n          }\n        }\n      }\n    },\n    resize: function resize() {\n      var _this3 = this;\n      if (!this.isShown || this.hiding) {\n        return;\n      }\n      if (this.fulled) {\n        this.close();\n        this.initBody();\n        this.open();\n      }\n      this.initContainer();\n      this.initViewer();\n      this.renderViewer();\n      this.renderList();\n      if (this.viewed) {\n        this.initImage(function () {\n          _this3.renderImage();\n        });\n      }\n      if (this.played) {\n        if (this.options.fullscreen && this.fulled && !(document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement)) {\n          this.stop();\n          return;\n        }\n        forEach(this.player.getElementsByTagName('img'), function (image) {\n          addListener(image, EVENT_LOAD, _this3.loadImage.bind(_this3), {\n            once: true\n          });\n          dispatchEvent(image, EVENT_LOAD);\n        });\n      }\n    },\n    wheel: function wheel(event) {\n      var _this4 = this;\n      if (!this.viewed) {\n        return;\n      }\n      event.preventDefault();\n\n      // Limit wheel speed to prevent zoom too fast\n      if (this.wheeling) {\n        return;\n      }\n      this.wheeling = true;\n      setTimeout(function () {\n        _this4.wheeling = false;\n      }, 50);\n      var ratio = Number(this.options.zoomRatio) || 0.1;\n      var delta = 1;\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n      this.zoom(-delta * ratio, true, null, event);\n    }\n  };\n\n  var methods = {\n    /** Show the viewer (only available in modal mode)\n     * @param {boolean} [immediate=false] - Indicates if show the viewer immediately or not.\n     * @returns {Viewer} this\n     */\n    show: function show() {\n      var immediate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var element = this.element,\n        options = this.options;\n      if (options.inline || this.showing || this.isShown || this.showing) {\n        return this;\n      }\n      if (!this.ready) {\n        this.build();\n        if (this.ready) {\n          this.show(immediate);\n        }\n        return this;\n      }\n      if (isFunction(options.show)) {\n        addListener(element, EVENT_SHOW, options.show, {\n          once: true\n        });\n      }\n      if (dispatchEvent(element, EVENT_SHOW) === false || !this.ready) {\n        return this;\n      }\n      if (this.hiding) {\n        this.transitioning.abort();\n      }\n      this.showing = true;\n      this.open();\n      var viewer = this.viewer;\n      removeClass(viewer, CLASS_HIDE);\n      viewer.setAttribute('role', 'dialog');\n      viewer.setAttribute('aria-labelledby', this.title.id);\n      viewer.setAttribute('aria-modal', true);\n      viewer.removeAttribute('aria-hidden');\n      if (options.transition && !immediate) {\n        var shown = this.shown.bind(this);\n        this.transitioning = {\n          abort: function abort() {\n            removeListener(viewer, EVENT_TRANSITION_END, shown);\n            removeClass(viewer, CLASS_IN);\n          }\n        };\n        addClass(viewer, CLASS_TRANSITION);\n\n        // Force reflow to enable CSS3 transition\n        viewer.initialOffsetWidth = viewer.offsetWidth;\n        addListener(viewer, EVENT_TRANSITION_END, shown, {\n          once: true\n        });\n        addClass(viewer, CLASS_IN);\n      } else {\n        addClass(viewer, CLASS_IN);\n        this.shown();\n      }\n      return this;\n    },\n    /**\n     * Hide the viewer (only available in modal mode)\n     * @param {boolean} [immediate=false] - Indicates if hide the viewer immediately or not.\n     * @returns {Viewer} this\n     */\n    hide: function hide() {\n      var _this = this;\n      var immediate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var element = this.element,\n        options = this.options;\n      if (options.inline || this.hiding || !(this.isShown || this.showing)) {\n        return this;\n      }\n      if (isFunction(options.hide)) {\n        addListener(element, EVENT_HIDE, options.hide, {\n          once: true\n        });\n      }\n      if (dispatchEvent(element, EVENT_HIDE) === false) {\n        return this;\n      }\n      if (this.showing) {\n        this.transitioning.abort();\n      }\n      this.hiding = true;\n      if (this.played) {\n        this.stop();\n      } else if (this.viewing) {\n        this.viewing.abort();\n      }\n      var viewer = this.viewer,\n        image = this.image;\n      var hideImmediately = function hideImmediately() {\n        removeClass(viewer, CLASS_IN);\n        _this.hidden();\n      };\n      if (options.transition && !immediate) {\n        var onViewerTransitionEnd = function onViewerTransitionEnd(event) {\n          // Ignore all propagating `transitionend` events (#275).\n          if (event && event.target === viewer) {\n            removeListener(viewer, EVENT_TRANSITION_END, onViewerTransitionEnd);\n            _this.hidden();\n          }\n        };\n        var onImageTransitionEnd = function onImageTransitionEnd() {\n          // In case of show the viewer by `viewer.show(true)` previously (#407).\n          if (hasClass(viewer, CLASS_TRANSITION)) {\n            addListener(viewer, EVENT_TRANSITION_END, onViewerTransitionEnd);\n            removeClass(viewer, CLASS_IN);\n          } else {\n            hideImmediately();\n          }\n        };\n        this.transitioning = {\n          abort: function abort() {\n            if (_this.viewed && hasClass(image, CLASS_TRANSITION)) {\n              removeListener(image, EVENT_TRANSITION_END, onImageTransitionEnd);\n            } else if (hasClass(viewer, CLASS_TRANSITION)) {\n              removeListener(viewer, EVENT_TRANSITION_END, onViewerTransitionEnd);\n            }\n          }\n        };\n\n        // In case of hiding the viewer when holding on the image (#255),\n        // note that the `CLASS_TRANSITION` class will be removed on pointer down.\n        if (this.viewed && hasClass(image, CLASS_TRANSITION)) {\n          addListener(image, EVENT_TRANSITION_END, onImageTransitionEnd, {\n            once: true\n          });\n          this.zoomTo(0, false, null, null, true);\n        } else {\n          onImageTransitionEnd();\n        }\n      } else {\n        hideImmediately();\n      }\n      return this;\n    },\n    /**\n     * View one of the images with image's index\n     * @param {number} index - The index of the image to view.\n     * @returns {Viewer} this\n     */\n    view: function view() {\n      var _this2 = this;\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.initialViewIndex;\n      index = Number(index) || 0;\n      if (this.hiding || this.played || index < 0 || index >= this.length || this.viewed && index === this.index) {\n        return this;\n      }\n      if (!this.isShown) {\n        this.index = index;\n        return this.show();\n      }\n      if (this.viewing) {\n        this.viewing.abort();\n      }\n      var element = this.element,\n        options = this.options,\n        title = this.title,\n        canvas = this.canvas;\n      var item = this.items[index];\n      var img = item.querySelector('img');\n      var url = getData(img, 'originalUrl');\n      var alt = img.getAttribute('alt');\n      var image = document.createElement('img');\n      forEach(options.inheritedAttributes, function (name) {\n        var value = img.getAttribute(name);\n        if (value !== null) {\n          image.setAttribute(name, value);\n        }\n      });\n      image.src = url;\n      image.alt = alt;\n      if (isFunction(options.view)) {\n        addListener(element, EVENT_VIEW, options.view, {\n          once: true\n        });\n      }\n      if (dispatchEvent(element, EVENT_VIEW, {\n        originalImage: this.images[index],\n        index: index,\n        image: image\n      }) === false || !this.isShown || this.hiding || this.played) {\n        return this;\n      }\n      var activeItem = this.items[this.index];\n      if (activeItem) {\n        removeClass(activeItem, CLASS_ACTIVE);\n        activeItem.removeAttribute('aria-selected');\n      }\n      addClass(item, CLASS_ACTIVE);\n      item.setAttribute('aria-selected', true);\n      if (options.focus) {\n        item.focus();\n      }\n      this.image = image;\n      this.viewed = false;\n      this.index = index;\n      this.imageData = {};\n      addClass(image, CLASS_INVISIBLE);\n      if (options.loading) {\n        addClass(canvas, CLASS_LOADING);\n      }\n      canvas.innerHTML = '';\n      canvas.appendChild(image);\n\n      // Center current item\n      this.renderList();\n\n      // Clear title\n      title.innerHTML = '';\n\n      // Generate title after viewed\n      var onViewed = function onViewed() {\n        var imageData = _this2.imageData;\n        var render = Array.isArray(options.title) ? options.title[1] : options.title;\n        title.innerHTML = escapeHTMLEntities(isFunction(render) ? render.call(_this2, image, imageData) : \"\".concat(alt, \" (\").concat(imageData.naturalWidth, \" \\xD7 \").concat(imageData.naturalHeight, \")\"));\n      };\n      var onLoad;\n      var onError;\n      addListener(element, EVENT_VIEWED, onViewed, {\n        once: true\n      });\n      this.viewing = {\n        abort: function abort() {\n          removeListener(element, EVENT_VIEWED, onViewed);\n          if (image.complete) {\n            if (_this2.imageRendering) {\n              _this2.imageRendering.abort();\n            } else if (_this2.imageInitializing) {\n              _this2.imageInitializing.abort();\n            }\n          } else {\n            // Cancel download to save bandwidth.\n            image.src = '';\n            removeListener(image, EVENT_LOAD, onLoad);\n            if (_this2.timeout) {\n              clearTimeout(_this2.timeout);\n            }\n          }\n        }\n      };\n      if (image.complete) {\n        this.load();\n      } else {\n        addListener(image, EVENT_LOAD, onLoad = function onLoad() {\n          removeListener(image, EVENT_ERROR, onError);\n          _this2.load();\n        }, {\n          once: true\n        });\n        addListener(image, EVENT_ERROR, onError = function onError() {\n          removeListener(image, EVENT_LOAD, onLoad);\n          if (_this2.timeout) {\n            clearTimeout(_this2.timeout);\n            _this2.timeout = false;\n          }\n          removeClass(image, CLASS_INVISIBLE);\n          if (options.loading) {\n            removeClass(_this2.canvas, CLASS_LOADING);\n          }\n        }, {\n          once: true\n        });\n        if (this.timeout) {\n          clearTimeout(this.timeout);\n        }\n\n        // Make the image visible if it fails to load within 1s\n        this.timeout = setTimeout(function () {\n          removeClass(image, CLASS_INVISIBLE);\n          _this2.timeout = false;\n        }, 1000);\n      }\n      return this;\n    },\n    /**\n     * View the previous image\n     * @param {boolean} [loop=false] - Indicate if view the last one\n     * when it is the first one at present.\n     * @returns {Viewer} this\n     */\n    prev: function prev() {\n      var loop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var index = this.index - 1;\n      if (index < 0) {\n        index = loop ? this.length - 1 : 0;\n      }\n      this.view(index);\n      return this;\n    },\n    /**\n     * View the next image\n     * @param {boolean} [loop=false] - Indicate if view the first one\n     * when it is the last one at present.\n     * @returns {Viewer} this\n     */\n    next: function next() {\n      var loop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var maxIndex = this.length - 1;\n      var index = this.index + 1;\n      if (index > maxIndex) {\n        index = loop ? 0 : maxIndex;\n      }\n      this.view(index);\n      return this;\n    },\n    /**\n     * Move the image with relative offsets.\n     * @param {number} x - The moving distance in the horizontal direction.\n     * @param {number} [y=x] The moving distance in the vertical direction.\n     * @returns {Viewer} this\n     */\n    move: function move(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var imageData = this.imageData;\n      this.moveTo(isUndefined(x) ? x : imageData.x + Number(x), isUndefined(y) ? y : imageData.y + Number(y));\n      return this;\n    },\n    /**\n     * Move the image to an absolute point.\n     * @param {number} x - The new position in the horizontal direction.\n     * @param {number} [y=x] - The new position in the vertical direction.\n     * @param {Event} [_originalEvent=null] - The original event if any.\n     * @returns {Viewer} this\n     */\n    moveTo: function moveTo(x) {\n      var _this3 = this;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var _originalEvent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var element = this.element,\n        options = this.options,\n        imageData = this.imageData;\n      x = Number(x);\n      y = Number(y);\n      if (this.viewed && !this.played && options.movable) {\n        var oldX = imageData.x;\n        var oldY = imageData.y;\n        var changed = false;\n        if (isNumber(x)) {\n          changed = true;\n        } else {\n          x = oldX;\n        }\n        if (isNumber(y)) {\n          changed = true;\n        } else {\n          y = oldY;\n        }\n        if (changed) {\n          if (isFunction(options.move)) {\n            addListener(element, EVENT_MOVE, options.move, {\n              once: true\n            });\n          }\n          if (dispatchEvent(element, EVENT_MOVE, {\n            x: x,\n            y: y,\n            oldX: oldX,\n            oldY: oldY,\n            originalEvent: _originalEvent\n          }) === false) {\n            return this;\n          }\n          imageData.x = x;\n          imageData.y = y;\n          imageData.left = x;\n          imageData.top = y;\n          this.moving = true;\n          this.renderImage(function () {\n            _this3.moving = false;\n            if (isFunction(options.moved)) {\n              addListener(element, EVENT_MOVED, options.moved, {\n                once: true\n              });\n            }\n            dispatchEvent(element, EVENT_MOVED, {\n              x: x,\n              y: y,\n              oldX: oldX,\n              oldY: oldY,\n              originalEvent: _originalEvent\n            }, {\n              cancelable: false\n            });\n          });\n        }\n      }\n      return this;\n    },\n    /**\n     * Rotate the image with a relative degree.\n     * @param {number} degree - The rotate degree.\n     * @returns {Viewer} this\n     */\n    rotate: function rotate(degree) {\n      this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n      return this;\n    },\n    /**\n     * Rotate the image to an absolute degree.\n     * @param {number} degree - The rotate degree.\n     * @returns {Viewer} this\n     */\n    rotateTo: function rotateTo(degree) {\n      var _this4 = this;\n      var element = this.element,\n        options = this.options,\n        imageData = this.imageData;\n      degree = Number(degree);\n      if (isNumber(degree) && this.viewed && !this.played && options.rotatable) {\n        var oldDegree = imageData.rotate;\n        if (isFunction(options.rotate)) {\n          addListener(element, EVENT_ROTATE, options.rotate, {\n            once: true\n          });\n        }\n        if (dispatchEvent(element, EVENT_ROTATE, {\n          degree: degree,\n          oldDegree: oldDegree\n        }) === false) {\n          return this;\n        }\n        imageData.rotate = degree;\n        this.rotating = true;\n        this.renderImage(function () {\n          _this4.rotating = false;\n          if (isFunction(options.rotated)) {\n            addListener(element, EVENT_ROTATED, options.rotated, {\n              once: true\n            });\n          }\n          dispatchEvent(element, EVENT_ROTATED, {\n            degree: degree,\n            oldDegree: oldDegree\n          }, {\n            cancelable: false\n          });\n        });\n      }\n      return this;\n    },\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Viewer} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      this.scale(_scaleX, this.imageData.scaleY);\n      return this;\n    },\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Viewer} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      this.scale(this.imageData.scaleX, _scaleY);\n      return this;\n    },\n    /**\n     * Scale the image.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Viewer} this\n     */\n    scale: function scale(scaleX) {\n      var _this5 = this;\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var element = this.element,\n        options = this.options,\n        imageData = this.imageData;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n      if (this.viewed && !this.played && options.scalable) {\n        var oldScaleX = imageData.scaleX;\n        var oldScaleY = imageData.scaleY;\n        var changed = false;\n        if (isNumber(scaleX)) {\n          changed = true;\n        } else {\n          scaleX = oldScaleX;\n        }\n        if (isNumber(scaleY)) {\n          changed = true;\n        } else {\n          scaleY = oldScaleY;\n        }\n        if (changed) {\n          if (isFunction(options.scale)) {\n            addListener(element, EVENT_SCALE, options.scale, {\n              once: true\n            });\n          }\n          if (dispatchEvent(element, EVENT_SCALE, {\n            scaleX: scaleX,\n            scaleY: scaleY,\n            oldScaleX: oldScaleX,\n            oldScaleY: oldScaleY\n          }) === false) {\n            return this;\n          }\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n          this.scaling = true;\n          this.renderImage(function () {\n            _this5.scaling = false;\n            if (isFunction(options.scaled)) {\n              addListener(element, EVENT_SCALED, options.scaled, {\n                once: true\n              });\n            }\n            dispatchEvent(element, EVENT_SCALED, {\n              scaleX: scaleX,\n              scaleY: scaleY,\n              oldScaleX: oldScaleX,\n              oldScaleY: oldScaleY\n            }, {\n              cancelable: false\n            });\n          });\n        }\n      }\n      return this;\n    },\n    /**\n     * Zoom the image with a relative ratio.\n     * @param {number} ratio - The target ratio.\n     * @param {boolean} [showTooltip=false] - Indicates whether to show the tooltip.\n     * @param {Object} [pivot] - The pivot point coordinate for zooming.\n     * @param {Event} [_originalEvent=null] - The original event if any.\n     * @returns {Viewer} this\n     */\n    zoom: function zoom(ratio) {\n      var showTooltip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var pivot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var _originalEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var imageData = this.imageData;\n      ratio = Number(ratio);\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n      this.zoomTo(imageData.width * ratio / imageData.naturalWidth, showTooltip, pivot, _originalEvent);\n      return this;\n    },\n    /**\n     * Zoom the image to an absolute ratio.\n     * @param {number} ratio - The target ratio.\n     * @param {boolean} [showTooltip] - Indicates whether to show the tooltip.\n     * @param {Object} [pivot] - The pivot point coordinate for zooming.\n     * @param {Event} [_originalEvent=null] - The original event if any.\n     * @param {Event} [_zoomable=false] - Indicates if the current zoom is available or not.\n     * @returns {Viewer} this\n     */\n    zoomTo: function zoomTo(ratio) {\n      var _this6 = this;\n      var showTooltip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var pivot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var _originalEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var _zoomable = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var element = this.element,\n        options = this.options,\n        pointers = this.pointers,\n        imageData = this.imageData;\n      var x = imageData.x,\n        y = imageData.y,\n        width = imageData.width,\n        height = imageData.height,\n        naturalWidth = imageData.naturalWidth,\n        naturalHeight = imageData.naturalHeight;\n      ratio = Math.max(0, ratio);\n      if (isNumber(ratio) && this.viewed && !this.played && (_zoomable || options.zoomable)) {\n        if (!_zoomable) {\n          var minZoomRatio = Math.max(0.01, options.minZoomRatio);\n          var maxZoomRatio = Math.min(100, options.maxZoomRatio);\n          ratio = Math.min(Math.max(ratio, minZoomRatio), maxZoomRatio);\n        }\n        if (_originalEvent) {\n          switch (_originalEvent.type) {\n            case 'wheel':\n              if (options.zoomRatio >= 0.055 && ratio > 0.95 && ratio < 1.05) {\n                ratio = 1;\n              }\n              break;\n            case 'pointermove':\n            case 'touchmove':\n            case 'mousemove':\n              if (ratio > 0.99 && ratio < 1.01) {\n                ratio = 1;\n              }\n              break;\n          }\n        }\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n        var offsetWidth = newWidth - width;\n        var offsetHeight = newHeight - height;\n        var oldRatio = imageData.ratio;\n        if (isFunction(options.zoom)) {\n          addListener(element, EVENT_ZOOM, options.zoom, {\n            once: true\n          });\n        }\n        if (dispatchEvent(element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: oldRatio,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n        this.zooming = true;\n        if (_originalEvent) {\n          var offset = getOffset(this.viewer);\n          var center = pointers && Object.keys(pointers).length > 0 ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          };\n\n          // Zoom from the triggering point of the event\n          imageData.x -= offsetWidth * ((center.pageX - offset.left - x) / width);\n          imageData.y -= offsetHeight * ((center.pageY - offset.top - y) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          imageData.x -= offsetWidth * ((pivot.x - x) / width);\n          imageData.y -= offsetHeight * ((pivot.y - y) / height);\n        } else {\n          // Zoom from the center of the image\n          imageData.x -= offsetWidth / 2;\n          imageData.y -= offsetHeight / 2;\n        }\n        imageData.left = imageData.x;\n        imageData.top = imageData.y;\n        imageData.width = newWidth;\n        imageData.height = newHeight;\n        imageData.oldRatio = oldRatio;\n        imageData.ratio = ratio;\n        this.renderImage(function () {\n          _this6.zooming = false;\n          if (isFunction(options.zoomed)) {\n            addListener(element, EVENT_ZOOMED, options.zoomed, {\n              once: true\n            });\n          }\n          dispatchEvent(element, EVENT_ZOOMED, {\n            ratio: ratio,\n            oldRatio: oldRatio,\n            originalEvent: _originalEvent\n          }, {\n            cancelable: false\n          });\n        });\n        if (showTooltip) {\n          this.tooltip();\n        }\n      }\n      return this;\n    },\n    /**\n     * Play the images\n     * @param {boolean|FullscreenOptions} [fullscreen=false] - Indicate if request fullscreen or not.\n     * @returns {Viewer} this\n     */\n    play: function play() {\n      var _this7 = this;\n      var fullscreen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!this.isShown || this.played) {\n        return this;\n      }\n      var element = this.element,\n        options = this.options;\n      if (isFunction(options.play)) {\n        addListener(element, EVENT_PLAY, options.play, {\n          once: true\n        });\n      }\n      if (dispatchEvent(element, EVENT_PLAY) === false) {\n        return this;\n      }\n      var player = this.player;\n      var onLoad = this.loadImage.bind(this);\n      var list = [];\n      var total = 0;\n      var index = 0;\n      this.played = true;\n      this.onLoadWhenPlay = onLoad;\n      if (fullscreen) {\n        this.requestFullscreen(fullscreen);\n      }\n      addClass(player, CLASS_SHOW);\n      forEach(this.items, function (item, i) {\n        var img = item.querySelector('img');\n        var image = document.createElement('img');\n        image.src = getData(img, 'originalUrl');\n        image.alt = img.getAttribute('alt');\n        image.referrerPolicy = img.referrerPolicy;\n        total += 1;\n        addClass(image, CLASS_FADE);\n        toggleClass(image, CLASS_TRANSITION, options.transition);\n        if (hasClass(item, CLASS_ACTIVE)) {\n          addClass(image, CLASS_IN);\n          index = i;\n        }\n        list.push(image);\n        addListener(image, EVENT_LOAD, onLoad, {\n          once: true\n        });\n        player.appendChild(image);\n      });\n      if (isNumber(options.interval) && options.interval > 0) {\n        var prev = function prev() {\n          clearTimeout(_this7.playing.timeout);\n          removeClass(list[index], CLASS_IN);\n          index -= 1;\n          index = index >= 0 ? index : total - 1;\n          addClass(list[index], CLASS_IN);\n          _this7.playing.timeout = setTimeout(prev, options.interval);\n        };\n        var next = function next() {\n          clearTimeout(_this7.playing.timeout);\n          removeClass(list[index], CLASS_IN);\n          index += 1;\n          index = index < total ? index : 0;\n          addClass(list[index], CLASS_IN);\n          _this7.playing.timeout = setTimeout(next, options.interval);\n        };\n        if (total > 1) {\n          this.playing = {\n            prev: prev,\n            next: next,\n            timeout: setTimeout(next, options.interval)\n          };\n        }\n      }\n      return this;\n    },\n    // Stop play\n    stop: function stop() {\n      var _this8 = this;\n      if (!this.played) {\n        return this;\n      }\n      var element = this.element,\n        options = this.options;\n      if (isFunction(options.stop)) {\n        addListener(element, EVENT_STOP, options.stop, {\n          once: true\n        });\n      }\n      if (dispatchEvent(element, EVENT_STOP) === false) {\n        return this;\n      }\n      var player = this.player;\n      clearTimeout(this.playing.timeout);\n      this.playing = false;\n      this.played = false;\n      forEach(player.getElementsByTagName('img'), function (image) {\n        removeListener(image, EVENT_LOAD, _this8.onLoadWhenPlay);\n      });\n      removeClass(player, CLASS_SHOW);\n      player.innerHTML = '';\n      this.exitFullscreen();\n      return this;\n    },\n    // Enter modal mode (only available in inline mode)\n    full: function full() {\n      var _this9 = this;\n      var options = this.options,\n        viewer = this.viewer,\n        image = this.image,\n        list = this.list;\n      if (!this.isShown || this.played || this.fulled || !options.inline) {\n        return this;\n      }\n      this.fulled = true;\n      this.open();\n      addClass(this.button, CLASS_FULLSCREEN_EXIT);\n      if (options.transition) {\n        removeClass(list, CLASS_TRANSITION);\n        if (this.viewed) {\n          removeClass(image, CLASS_TRANSITION);\n        }\n      }\n      addClass(viewer, CLASS_FIXED);\n      viewer.setAttribute('role', 'dialog');\n      viewer.setAttribute('aria-labelledby', this.title.id);\n      viewer.setAttribute('aria-modal', true);\n      viewer.removeAttribute('style');\n      setStyle(viewer, {\n        zIndex: options.zIndex\n      });\n      if (options.focus) {\n        this.enforceFocus();\n      }\n      this.initContainer();\n      this.viewerData = assign({}, this.containerData);\n      this.renderList();\n      if (this.viewed) {\n        this.initImage(function () {\n          _this9.renderImage(function () {\n            if (options.transition) {\n              setTimeout(function () {\n                addClass(image, CLASS_TRANSITION);\n                addClass(list, CLASS_TRANSITION);\n              }, 0);\n            }\n          });\n        });\n      }\n      return this;\n    },\n    // Exit modal mode (only available in inline mode)\n    exit: function exit() {\n      var _this10 = this;\n      var options = this.options,\n        viewer = this.viewer,\n        image = this.image,\n        list = this.list;\n      if (!this.isShown || this.played || !this.fulled || !options.inline) {\n        return this;\n      }\n      this.fulled = false;\n      this.close();\n      removeClass(this.button, CLASS_FULLSCREEN_EXIT);\n      if (options.transition) {\n        removeClass(list, CLASS_TRANSITION);\n        if (this.viewed) {\n          removeClass(image, CLASS_TRANSITION);\n        }\n      }\n      if (options.focus) {\n        this.clearEnforceFocus();\n      }\n      viewer.removeAttribute('role');\n      viewer.removeAttribute('aria-labelledby');\n      viewer.removeAttribute('aria-modal');\n      removeClass(viewer, CLASS_FIXED);\n      setStyle(viewer, {\n        zIndex: options.zIndexInline\n      });\n      this.viewerData = assign({}, this.parentData);\n      this.renderViewer();\n      this.renderList();\n      if (this.viewed) {\n        this.initImage(function () {\n          _this10.renderImage(function () {\n            if (options.transition) {\n              setTimeout(function () {\n                addClass(image, CLASS_TRANSITION);\n                addClass(list, CLASS_TRANSITION);\n              }, 0);\n            }\n          });\n        });\n      }\n      return this;\n    },\n    // Show the current ratio of the image with percentage\n    tooltip: function tooltip() {\n      var _this11 = this;\n      var options = this.options,\n        tooltipBox = this.tooltipBox,\n        imageData = this.imageData;\n      if (!this.viewed || this.played || !options.tooltip) {\n        return this;\n      }\n      tooltipBox.textContent = \"\".concat(Math.round(imageData.ratio * 100), \"%\");\n      if (!this.tooltipping) {\n        if (options.transition) {\n          if (this.fading) {\n            dispatchEvent(tooltipBox, EVENT_TRANSITION_END);\n          }\n          addClass(tooltipBox, CLASS_SHOW);\n          addClass(tooltipBox, CLASS_FADE);\n          addClass(tooltipBox, CLASS_TRANSITION);\n          tooltipBox.removeAttribute('aria-hidden');\n\n          // Force reflow to enable CSS3 transition\n          tooltipBox.initialOffsetWidth = tooltipBox.offsetWidth;\n          addClass(tooltipBox, CLASS_IN);\n        } else {\n          addClass(tooltipBox, CLASS_SHOW);\n          tooltipBox.removeAttribute('aria-hidden');\n        }\n      } else {\n        clearTimeout(this.tooltipping);\n      }\n      this.tooltipping = setTimeout(function () {\n        if (options.transition) {\n          addListener(tooltipBox, EVENT_TRANSITION_END, function () {\n            removeClass(tooltipBox, CLASS_SHOW);\n            removeClass(tooltipBox, CLASS_FADE);\n            removeClass(tooltipBox, CLASS_TRANSITION);\n            tooltipBox.setAttribute('aria-hidden', true);\n            _this11.fading = false;\n          }, {\n            once: true\n          });\n          removeClass(tooltipBox, CLASS_IN);\n          _this11.fading = true;\n        } else {\n          removeClass(tooltipBox, CLASS_SHOW);\n          tooltipBox.setAttribute('aria-hidden', true);\n        }\n        _this11.tooltipping = false;\n      }, 1000);\n      return this;\n    },\n    /**\n     * Toggle the image size between its current size and natural size\n     * @param {Event} [_originalEvent=null] - The original event if any.\n     * @returns {Viewer} this\n     */\n    toggle: function toggle() {\n      var _originalEvent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (this.imageData.ratio === 1) {\n        this.zoomTo(this.imageData.oldRatio, true, null, _originalEvent);\n      } else {\n        this.zoomTo(1, true, null, _originalEvent);\n      }\n      return this;\n    },\n    // Reset the image to its initial state\n    reset: function reset() {\n      if (this.viewed && !this.played) {\n        this.imageData = assign({}, this.initialImageData);\n        this.renderImage();\n      }\n      return this;\n    },\n    // Update viewer when images changed\n    update: function update() {\n      var _this12 = this;\n      var element = this.element,\n        options = this.options,\n        isImg = this.isImg;\n\n      // Destroy viewer if the target image was deleted\n      if (isImg && !element.parentNode) {\n        return this.destroy();\n      }\n      var images = [];\n      forEach(isImg ? [element] : element.querySelectorAll('img'), function (image) {\n        if (isFunction(options.filter)) {\n          if (options.filter.call(_this12, image)) {\n            images.push(image);\n          }\n        } else if (_this12.getImageURL(image)) {\n          images.push(image);\n        }\n      });\n      if (!images.length) {\n        return this;\n      }\n      this.images = images;\n      this.length = images.length;\n      if (this.ready) {\n        var changedIndexes = [];\n        forEach(this.items, function (item, i) {\n          var img = item.querySelector('img');\n          var image = images[i];\n          if (image && img) {\n            if (image.src !== img.src\n\n            // Title changed (#408)\n            || image.alt !== img.alt) {\n              changedIndexes.push(i);\n            }\n          } else {\n            changedIndexes.push(i);\n          }\n        });\n        setStyle(this.list, {\n          width: 'auto'\n        });\n        this.initList();\n        if (this.isShown) {\n          if (this.length) {\n            if (this.viewed) {\n              var changedIndex = changedIndexes.indexOf(this.index);\n              if (changedIndex >= 0) {\n                this.viewed = false;\n                this.view(Math.max(Math.min(this.index - changedIndex, this.length - 1), 0));\n              } else {\n                var activeItem = this.items[this.index];\n\n                // Reactivate the current viewing item after reset the list.\n                addClass(activeItem, CLASS_ACTIVE);\n                activeItem.setAttribute('aria-selected', true);\n              }\n            }\n          } else {\n            this.image = null;\n            this.viewed = false;\n            this.index = 0;\n            this.imageData = {};\n            this.canvas.innerHTML = '';\n            this.title.innerHTML = '';\n          }\n        }\n      } else {\n        this.build();\n      }\n      return this;\n    },\n    // Destroy the viewer\n    destroy: function destroy() {\n      var element = this.element,\n        options = this.options;\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n      this.destroyed = true;\n      if (this.ready) {\n        if (this.played) {\n          this.stop();\n        }\n        if (options.inline) {\n          if (this.fulled) {\n            this.exit();\n          }\n          this.unbind();\n        } else if (this.isShown) {\n          if (this.viewing) {\n            if (this.imageRendering) {\n              this.imageRendering.abort();\n            } else if (this.imageInitializing) {\n              this.imageInitializing.abort();\n            }\n          }\n          if (this.hiding) {\n            this.transitioning.abort();\n          }\n          this.hidden();\n        } else if (this.showing) {\n          this.transitioning.abort();\n          this.hidden();\n        }\n        this.ready = false;\n        this.viewer.parentNode.removeChild(this.viewer);\n      } else if (options.inline) {\n        if (this.delaying) {\n          this.delaying.abort();\n        } else if (this.initializing) {\n          this.initializing.abort();\n        }\n      }\n      if (!options.inline) {\n        removeListener(element, EVENT_CLICK, this.onStart);\n      }\n      element[NAMESPACE] = undefined;\n      return this;\n    }\n  };\n\n  var others = {\n    getImageURL: function getImageURL(image) {\n      var url = this.options.url;\n      if (isString(url)) {\n        url = image.getAttribute(url);\n      } else if (isFunction(url)) {\n        url = url.call(this, image);\n      } else {\n        url = '';\n      }\n      return url;\n    },\n    enforceFocus: function enforceFocus() {\n      var _this = this;\n      this.clearEnforceFocus();\n      addListener(document, EVENT_FOCUSIN, this.onFocusin = function (event) {\n        var viewer = _this.viewer;\n        var target = event.target;\n        if (target === document || target === viewer || viewer.contains(target)) {\n          return;\n        }\n        while (target) {\n          // Avoid conflicts with other modals (#474, #540)\n          if (target.getAttribute('tabindex') !== null || target.getAttribute('aria-modal') === 'true') {\n            return;\n          }\n          target = target.parentElement;\n        }\n        viewer.focus();\n      });\n    },\n    clearEnforceFocus: function clearEnforceFocus() {\n      if (this.onFocusin) {\n        removeListener(document, EVENT_FOCUSIN, this.onFocusin);\n        this.onFocusin = null;\n      }\n    },\n    open: function open() {\n      var body = this.body;\n      addClass(body, CLASS_OPEN);\n      if (this.scrollbarWidth > 0) {\n        body.style.paddingRight = \"\".concat(this.scrollbarWidth + (parseFloat(this.initialBodyComputedPaddingRight) || 0), \"px\");\n      }\n    },\n    close: function close() {\n      var body = this.body;\n      removeClass(body, CLASS_OPEN);\n      if (this.scrollbarWidth > 0) {\n        body.style.paddingRight = this.initialBodyPaddingRight;\n      }\n    },\n    shown: function shown() {\n      var element = this.element,\n        options = this.options,\n        viewer = this.viewer;\n      this.fulled = true;\n      this.isShown = true;\n      this.render();\n      this.bind();\n      this.showing = false;\n      if (options.focus) {\n        viewer.focus();\n        this.enforceFocus();\n      }\n      if (isFunction(options.shown)) {\n        addListener(element, EVENT_SHOWN, options.shown, {\n          once: true\n        });\n      }\n      if (dispatchEvent(element, EVENT_SHOWN) === false) {\n        return;\n      }\n      if (this.ready && this.isShown && !this.hiding) {\n        this.view(this.index);\n      }\n    },\n    hidden: function hidden() {\n      var element = this.element,\n        options = this.options,\n        viewer = this.viewer;\n      if (options.fucus) {\n        this.clearEnforceFocus();\n      }\n      this.close();\n      this.unbind();\n      addClass(viewer, CLASS_HIDE);\n      viewer.removeAttribute('role');\n      viewer.removeAttribute('aria-labelledby');\n      viewer.removeAttribute('aria-modal');\n      viewer.setAttribute('aria-hidden', true);\n      this.resetList();\n      this.resetImage();\n      this.fulled = false;\n      this.viewed = false;\n      this.isShown = false;\n      this.hiding = false;\n      if (!this.destroyed) {\n        if (isFunction(options.hidden)) {\n          addListener(element, EVENT_HIDDEN, options.hidden, {\n            once: true\n          });\n        }\n        dispatchEvent(element, EVENT_HIDDEN, null, {\n          cancelable: false\n        });\n      }\n    },\n    requestFullscreen: function requestFullscreen(options) {\n      var document = this.element.ownerDocument;\n      if (this.fulled && !(document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement)) {\n        var documentElement = document.documentElement;\n\n        // Element.requestFullscreen()\n        if (documentElement.requestFullscreen) {\n          // Avoid TypeError when convert `options` to dictionary\n          if (isPlainObject(options)) {\n            documentElement.requestFullscreen(options);\n          } else {\n            documentElement.requestFullscreen();\n          }\n        } else if (documentElement.webkitRequestFullscreen) {\n          documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n        } else if (documentElement.mozRequestFullScreen) {\n          documentElement.mozRequestFullScreen();\n        } else if (documentElement.msRequestFullscreen) {\n          documentElement.msRequestFullscreen();\n        }\n      }\n    },\n    exitFullscreen: function exitFullscreen() {\n      var document = this.element.ownerDocument;\n      if (this.fulled && (document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement)) {\n        // Document.exitFullscreen()\n        if (document.exitFullscreen) {\n          document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n          document.webkitExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen();\n        } else if (document.msExitFullscreen) {\n          document.msExitFullscreen();\n        }\n      }\n    },\n    change: function change(event) {\n      var options = this.options,\n        pointers = this.pointers;\n      var pointer = pointers[Object.keys(pointers)[0]];\n\n      // In the case of the `pointers` object is empty (#421)\n      if (!pointer) {\n        return;\n      }\n      var offsetX = pointer.endX - pointer.startX;\n      var offsetY = pointer.endY - pointer.startY;\n      switch (this.action) {\n        // Move the current image\n        case ACTION_MOVE:\n          if (offsetX !== 0 || offsetY !== 0) {\n            this.pointerMoved = true;\n            this.move(offsetX, offsetY, event);\n          }\n          break;\n\n        // Zoom the current image\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), false, null, event);\n          break;\n        case ACTION_SWITCH:\n          {\n            this.action = 'switched';\n            var absoluteOffsetX = Math.abs(offsetX);\n            if (absoluteOffsetX > 1 && absoluteOffsetX > Math.abs(offsetY)) {\n              // Empty `pointers` as `touchend` event will not be fired after swiped in iOS browsers.\n              this.pointers = {};\n              if (offsetX > 1) {\n                this.prev(options.loop);\n              } else if (offsetX < -1) {\n                this.next(options.loop);\n              }\n            }\n            break;\n          }\n      }\n\n      // Override\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    },\n    isSwitchable: function isSwitchable() {\n      var imageData = this.imageData,\n        viewerData = this.viewerData;\n      return this.length > 1 && imageData.x >= 0 && imageData.y >= 0 && imageData.width <= viewerData.width && imageData.height <= viewerData.height;\n    }\n  };\n\n  var AnotherViewer = WINDOW.Viewer;\n  var getUniqueID = function (id) {\n    return function () {\n      id += 1;\n      return id;\n    };\n  }(-1);\n  var Viewer = /*#__PURE__*/function () {\n    /**\n     * Create a new Viewer.\n     * @param {Element} element - The target element for viewing.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Viewer(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      _classCallCheck(this, Viewer);\n      if (!element || element.nodeType !== 1) {\n        throw new Error('The first argument is required and must be an element.');\n      }\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.action = false;\n      this.fading = false;\n      this.fulled = false;\n      this.hiding = false;\n      this.imageClicked = false;\n      this.imageData = {};\n      this.index = this.options.initialViewIndex;\n      this.isImg = false;\n      this.isShown = false;\n      this.length = 0;\n      this.moving = false;\n      this.played = false;\n      this.playing = false;\n      this.pointers = {};\n      this.ready = false;\n      this.rotating = false;\n      this.scaling = false;\n      this.showing = false;\n      this.timeout = false;\n      this.tooltipping = false;\n      this.viewed = false;\n      this.viewing = false;\n      this.wheeling = false;\n      this.zooming = false;\n      this.pointerMoved = false;\n      this.id = getUniqueID();\n      this.init();\n    }\n    _createClass(Viewer, [{\n      key: \"init\",\n      value: function init() {\n        var _this = this;\n        var element = this.element,\n          options = this.options;\n        if (element[NAMESPACE]) {\n          return;\n        }\n        element[NAMESPACE] = this;\n\n        // The `focus` option requires the `keyboard` option set to `true`.\n        if (options.focus && !options.keyboard) {\n          options.focus = false;\n        }\n        var isImg = element.localName === 'img';\n        var images = [];\n        forEach(isImg ? [element] : element.querySelectorAll('img'), function (image) {\n          if (isFunction(options.filter)) {\n            if (options.filter.call(_this, image)) {\n              images.push(image);\n            }\n          } else if (_this.getImageURL(image)) {\n            images.push(image);\n          }\n        });\n        this.isImg = isImg;\n        this.length = images.length;\n        this.images = images;\n        this.initBody();\n\n        // Override `transition` option if it is not supported\n        if (isUndefined(document.createElement(NAMESPACE).style.transition)) {\n          options.transition = false;\n        }\n        if (options.inline) {\n          var count = 0;\n          var progress = function progress() {\n            count += 1;\n            if (count === _this.length) {\n              var timeout;\n              _this.initializing = false;\n              _this.delaying = {\n                abort: function abort() {\n                  clearTimeout(timeout);\n                }\n              };\n\n              // build asynchronously to keep `this.viewer` is accessible in `ready` event handler.\n              timeout = setTimeout(function () {\n                _this.delaying = false;\n                _this.build();\n              }, 0);\n            }\n          };\n          this.initializing = {\n            abort: function abort() {\n              forEach(images, function (image) {\n                if (!image.complete) {\n                  removeListener(image, EVENT_LOAD, progress);\n                  removeListener(image, EVENT_ERROR, progress);\n                }\n              });\n            }\n          };\n          forEach(images, function (image) {\n            if (image.complete) {\n              progress();\n            } else {\n              var onLoad;\n              var onError;\n              addListener(image, EVENT_LOAD, onLoad = function onLoad() {\n                removeListener(image, EVENT_ERROR, onError);\n                progress();\n              }, {\n                once: true\n              });\n              addListener(image, EVENT_ERROR, onError = function onError() {\n                removeListener(image, EVENT_LOAD, onLoad);\n                progress();\n              }, {\n                once: true\n              });\n            }\n          });\n        } else {\n          addListener(element, EVENT_CLICK, this.onStart = function (_ref) {\n            var target = _ref.target;\n            if (target.localName === 'img' && (!isFunction(options.filter) || options.filter.call(_this, target))) {\n              _this.view(_this.images.indexOf(target));\n            }\n          });\n        }\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (this.ready) {\n          return;\n        }\n        var element = this.element,\n          options = this.options;\n        var parent = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var viewer = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var title = viewer.querySelector(\".\".concat(NAMESPACE, \"-title\"));\n        var toolbar = viewer.querySelector(\".\".concat(NAMESPACE, \"-toolbar\"));\n        var navbar = viewer.querySelector(\".\".concat(NAMESPACE, \"-navbar\"));\n        var button = viewer.querySelector(\".\".concat(NAMESPACE, \"-button\"));\n        var canvas = viewer.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        this.parent = parent;\n        this.viewer = viewer;\n        this.title = title;\n        this.toolbar = toolbar;\n        this.navbar = navbar;\n        this.button = button;\n        this.canvas = canvas;\n        this.footer = viewer.querySelector(\".\".concat(NAMESPACE, \"-footer\"));\n        this.tooltipBox = viewer.querySelector(\".\".concat(NAMESPACE, \"-tooltip\"));\n        this.player = viewer.querySelector(\".\".concat(NAMESPACE, \"-player\"));\n        this.list = viewer.querySelector(\".\".concat(NAMESPACE, \"-list\"));\n        viewer.id = \"\".concat(NAMESPACE).concat(this.id);\n        title.id = \"\".concat(NAMESPACE, \"Title\").concat(this.id);\n        addClass(title, !options.title ? CLASS_HIDE : getResponsiveClass(Array.isArray(options.title) ? options.title[0] : options.title));\n        addClass(navbar, !options.navbar ? CLASS_HIDE : getResponsiveClass(options.navbar));\n        toggleClass(button, CLASS_HIDE, !options.button);\n        if (options.keyboard) {\n          button.setAttribute('tabindex', 0);\n        }\n        if (options.backdrop) {\n          addClass(viewer, \"\".concat(NAMESPACE, \"-backdrop\"));\n          if (!options.inline && options.backdrop !== 'static') {\n            setData(canvas, DATA_ACTION, 'hide');\n          }\n        }\n        if (isString(options.className) && options.className) {\n          // In case there are multiple class names\n          options.className.split(REGEXP_SPACES).forEach(function (className) {\n            addClass(viewer, className);\n          });\n        }\n        if (options.toolbar) {\n          var list = document.createElement('ul');\n          var custom = isPlainObject(options.toolbar);\n          var zoomButtons = BUTTONS.slice(0, 3);\n          var rotateButtons = BUTTONS.slice(7, 9);\n          var scaleButtons = BUTTONS.slice(9);\n          if (!custom) {\n            addClass(toolbar, getResponsiveClass(options.toolbar));\n          }\n          forEach(custom ? options.toolbar : BUTTONS, function (value, index) {\n            var deep = custom && isPlainObject(value);\n            var name = custom ? hyphenate(index) : value;\n            var show = deep && !isUndefined(value.show) ? value.show : value;\n            if (!show || !options.zoomable && zoomButtons.indexOf(name) !== -1 || !options.rotatable && rotateButtons.indexOf(name) !== -1 || !options.scalable && scaleButtons.indexOf(name) !== -1) {\n              return;\n            }\n            var size = deep && !isUndefined(value.size) ? value.size : value;\n            var click = deep && !isUndefined(value.click) ? value.click : value;\n            var item = document.createElement('li');\n            if (options.keyboard) {\n              item.setAttribute('tabindex', 0);\n            }\n            item.setAttribute('role', 'button');\n            addClass(item, \"\".concat(NAMESPACE, \"-\").concat(name));\n            if (!isFunction(click)) {\n              setData(item, DATA_ACTION, name);\n            }\n            if (isNumber(show)) {\n              addClass(item, getResponsiveClass(show));\n            }\n            if (['small', 'large'].indexOf(size) !== -1) {\n              addClass(item, \"\".concat(NAMESPACE, \"-\").concat(size));\n            } else if (name === 'play') {\n              addClass(item, \"\".concat(NAMESPACE, \"-large\"));\n            }\n            if (isFunction(click)) {\n              addListener(item, EVENT_CLICK, click);\n            }\n            list.appendChild(item);\n          });\n          toolbar.appendChild(list);\n        } else {\n          addClass(toolbar, CLASS_HIDE);\n        }\n        if (!options.rotatable) {\n          var rotates = toolbar.querySelectorAll('li[class*=\"rotate\"]');\n          addClass(rotates, CLASS_INVISIBLE);\n          forEach(rotates, function (rotate) {\n            toolbar.appendChild(rotate);\n          });\n        }\n        if (options.inline) {\n          addClass(button, CLASS_FULLSCREEN);\n          setStyle(viewer, {\n            zIndex: options.zIndexInline\n          });\n          if (window.getComputedStyle(parent).position === 'static') {\n            setStyle(parent, {\n              position: 'relative'\n            });\n          }\n          parent.insertBefore(viewer, element.nextSibling);\n        } else {\n          addClass(button, CLASS_CLOSE);\n          addClass(viewer, CLASS_FIXED);\n          addClass(viewer, CLASS_FADE);\n          addClass(viewer, CLASS_HIDE);\n          setStyle(viewer, {\n            zIndex: options.zIndex\n          });\n          var container = options.container;\n          if (isString(container)) {\n            container = element.ownerDocument.querySelector(container);\n          }\n          if (!container) {\n            container = this.body;\n          }\n          container.appendChild(viewer);\n        }\n        if (options.inline) {\n          this.render();\n          this.bind();\n          this.isShown = true;\n        }\n        this.ready = true;\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n        if (dispatchEvent(element, EVENT_READY) === false) {\n          this.ready = false;\n          return;\n        }\n        if (this.ready && options.inline) {\n          this.view(this.index);\n        }\n      }\n\n      /**\n       * Get the no conflict viewer class.\n       * @returns {Viewer} The viewer class.\n       */\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Viewer = AnotherViewer;\n        return Viewer;\n      }\n\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n    return Viewer;\n  }();\n  assign(Viewer.prototype, render, events, handlers, methods, others);\n\n  return Viewer;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/viewerjs/dist/viewer.js\n"));

/***/ })

});